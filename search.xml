<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[喵喵喵！]]></title>
      <url>https://b0lv42.github.io/2017/04/01/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
      
        
        <tags>
            
            <tag> 收集的乱七八糟的东西！ </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[HDOJ 2544 【Dijkstra】最短路]]></title>
      <url>https://b0lv42.github.io/2017/03/11/HDOJ%202544%20%E3%80%90Dijkstra%E3%80%91%E6%9C%80%E7%9F%AD%E8%B7%AF/</url>
      <content type="html"><![CDATA[<h3 id="【题目描述】"><a href="#【题目描述】" class="headerlink" title="【题目描述】"></a>【题目描述】</h3><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=2544" target="_blank" rel="external">http://acm.hdu.edu.cn/showproblem.php?pid=2544</a><br><br><br><br></p>
<h3 id="【思路】"><a href="#【思路】" class="headerlink" title="【思路】"></a>【思路】</h3><p>啊就是最短路裸题…Dijkstra+heap<br><br><br><br><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> Max=<span class="number">2100000</span>;</div><div class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; Pair;</div><div class="line">priority_queue&lt;Pair,<span class="built_in">vector</span>&lt;Pair&gt;,greater&lt;Pair&gt; &gt; Q;</div><div class="line"></div><div class="line"><span class="keyword">int</span> n,tail,dis[<span class="number">200</span>],head[<span class="number">200</span>];</div><div class="line"></div><div class="line"><span class="keyword">struct</span> data</div><div class="line">&#123;</div><div class="line">      <span class="keyword">int</span> w,to,next;</div><div class="line">&#125;k,edge[<span class="number">21000</span>];</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v,<span class="keyword">int</span> x)</span></span></div><div class="line">&#123;</div><div class="line">      edge[tail].w=x;</div><div class="line">      edge[tail].to=v;</div><div class="line">      edge[tail].next=head[u];</div><div class="line">      head[u]=tail++;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">Dij</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">      Pair s,u;</div><div class="line">      <span class="keyword">int</span> v,val;</div><div class="line"></div><div class="line">      dis[<span class="number">1</span>]=<span class="number">0</span>;</div><div class="line">      s.first=<span class="number">0</span>;</div><div class="line">      s.second=<span class="number">1</span>;</div><div class="line">      Q.push(s);</div><div class="line"></div><div class="line">      <span class="keyword">while</span> (!Q.empty())</div><div class="line">      &#123;</div><div class="line">            u=Q.top();</div><div class="line">            Q.pop();</div><div class="line">            v=u.second;</div><div class="line">            val=u.first;</div><div class="line">            <span class="keyword">if</span> (dis[v]&lt;val) <span class="keyword">continue</span>;</div><div class="line"></div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i=head[v];i!=<span class="number">-1</span>;i=edge[i].next)</div><div class="line">            &#123;</div><div class="line">                  k=edge[i];</div><div class="line">                  <span class="keyword">if</span> (dis[k.to]&gt;dis[v]+k.w)</div><div class="line">                  &#123;</div><div class="line">                        dis[k.to]=dis[v]+k.w;</div><div class="line">                        Q.push(Pair(dis[k.to],k.to));</div><div class="line">                  &#125;</div><div class="line">            &#125;</div><div class="line">      &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">      <span class="keyword">int</span> n,m,u,v,x;</div><div class="line"></div><div class="line">      <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m)!=EOF)</div><div class="line">      &#123;</div><div class="line">            <span class="keyword">if</span> (!n &amp;&amp; !m) <span class="keyword">break</span>;</div><div class="line"></div><div class="line">            tail=<span class="number">0</span>;</div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">200</span>;i++) head[i]=<span class="number">-1</span>;</div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">200</span>;i++) dis[i]=Max;</div><div class="line"></div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</div><div class="line">            &#123;</div><div class="line">                  <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;u,&amp;v,&amp;x);</div><div class="line">                  build(u,v,x);</div><div class="line">                  build(v,u,x);</div><div class="line">            &#125;</div><div class="line">            Dij();</div><div class="line">            <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,dis[n]);</div><div class="line">      &#125;</div><div class="line"></div><div class="line">      <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
      
        
        <tags>
            
            <tag> ACM题解 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[HDOJ 2066 【Dijkstra】一个人的旅行]]></title>
      <url>https://b0lv42.github.io/2017/03/10/HDOJ%202066%20%E3%80%90Dijkstra%E3%80%91%E4%B8%80%E4%B8%AA%E4%BA%BA%E7%9A%84%E6%97%85%E8%A1%8C/</url>
      <content type="html"><![CDATA[<h3 id="【题目描述】"><a href="#【题目描述】" class="headerlink" title="【题目描述】"></a>【题目描述】</h3><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=2066" target="_blank" rel="external">http://acm.hdu.edu.cn/showproblem.php?pid=2066</a></p>
<h3 id="【思路】"><a href="#【思路】" class="headerlink" title="【思路】"></a>【思路】</h3><p>看起来是多源多终点的最短路问题，每个起点和每个终点都枚举的话，复杂度会很高，所以我自己建一个点，编号是0，在它与所有的起点之间建一条费用为0的双向边，再建一个点，编号是2000（远大于数据范围），在它和所有的终点之间建0费用边。<br>然后问题就很好解决了，单源最短路嘿！<em>(:з」∠)</em></p>
<h3 id="Dijkstra-heap-前向星："><a href="#Dijkstra-heap-前向星：" class="headerlink" title="Dijkstra+heap+前向星："></a>Dijkstra+heap+前向星：</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> Max=<span class="number">21000000</span>;</div><div class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; Pair;</div><div class="line">priority_queue&lt; Pair, <span class="built_in">vector</span>&lt;Pair&gt;, greater&lt;Pair&gt; &gt; Q;</div><div class="line"></div><div class="line"><span class="keyword">int</span> dis[<span class="number">2100</span>],head[<span class="number">2100</span>];</div><div class="line"><span class="keyword">int</span> tail;</div><div class="line"></div><div class="line"><span class="keyword">struct</span> data</div><div class="line">&#123;</div><div class="line">      <span class="keyword">int</span> w,to,next;</div><div class="line">&#125;edge[<span class="number">201000</span>],k;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b,<span class="keyword">int</span> x)</span></span></div><div class="line">&#123;</div><div class="line">      edge[tail].w=x;</div><div class="line">      edge[tail].to=b;</div><div class="line">      edge[tail].next=head[a];</div><div class="line">      head[a]=tail++;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">Dijkstra</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">      Pair s,u;</div><div class="line">      <span class="keyword">int</span> v,val;</div><div class="line"></div><div class="line">      dis[<span class="number">0</span>]=<span class="number">0</span>;</div><div class="line">      s.first=<span class="number">0</span>;</div><div class="line">      s.second=<span class="number">0</span>;</div><div class="line">      Q.push(s);</div><div class="line"></div><div class="line">      <span class="keyword">while</span> (!Q.empty())</div><div class="line">      &#123;</div><div class="line">            u=Q.top();</div><div class="line">            Q.pop();</div><div class="line">            val=u.first;</div><div class="line">            v=u.second;</div><div class="line">            <span class="keyword">if</span> (dis[v]&lt;val) <span class="keyword">continue</span>;</div><div class="line"></div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i=head[v]; i!=<span class="number">-1</span>; i=edge[i].next)</div><div class="line">            &#123;</div><div class="line">                  k=edge[i];</div><div class="line">                  <span class="keyword">if</span> (dis[k.to]&gt;dis[v]+k.w)</div><div class="line">                  &#123;</div><div class="line">                        dis[k.to]=dis[v]+k.w;</div><div class="line">                        Q.push(Pair(dis[k.to],k.to));</div><div class="line">                  &#125;</div><div class="line">            &#125;</div><div class="line">      &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">      <span class="keyword">int</span> T,S,D,a,b,x;</div><div class="line"></div><div class="line">      <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;T,&amp;S,&amp;D)!=EOF)</div><div class="line">      &#123;</div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">2100</span>;i++) head[i]=<span class="number">-1</span>;</div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">2100</span>;i++) dis[i]=Max;</div><div class="line">            tail=<span class="number">0</span>;</div><div class="line"></div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=T;i++)</div><div class="line">            &#123;</div><div class="line">                  <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;a,&amp;b,&amp;x);</div><div class="line">                  build(a,b,x);</div><div class="line">                  build(b,a,x);</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=S;i++)</div><div class="line">            &#123;</div><div class="line">                  <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;x);</div><div class="line">                  build(<span class="number">0</span>,x,<span class="number">0</span>);</div><div class="line">                  build(x,<span class="number">0</span>,<span class="number">0</span>);</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=D;i++)</div><div class="line">            &#123;</div><div class="line">                  <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;x);</div><div class="line">                  build(<span class="number">2000</span>,x,<span class="number">0</span>);</div><div class="line">                  build(x,<span class="number">2000</span>,<span class="number">0</span>);</div><div class="line">            &#125;</div><div class="line">            Dijkstra();</div><div class="line">            <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,dis[<span class="number">2000</span>]);</div><div class="line">      &#125;</div><div class="line"></div><div class="line">      <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> ACM题解 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[HDOJ 1874 【FLoyd】【Bellman】【Dijkstra】畅通工程续]]></title>
      <url>https://b0lv42.github.io/2017/03/09/HDOJ%201874%20%E3%80%90FLoyd%E3%80%91%E3%80%90Bellman%E3%80%91%E7%95%85%E9%80%9A%E5%B7%A5%E7%A8%8B%E7%BB%AD/</url>
      <content type="html"><![CDATA[<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=1874" target="_blank" rel="external">http://acm.hdu.edu.cn/showproblem.php?pid=1874</a><br><br><br><br></p>
<h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>单源单终点求最短路，有很多写法…数据小。<br>P.S.用floyd是有坑的，数据会给出一条起点和终点相同的正边，就会WA。<br><br><br><br></p>
<h3 id="FLoyd"><a href="#FLoyd" class="headerlink" title="FLoyd"></a>FLoyd</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> Max=<span class="number">210000</span>;</div><div class="line"><span class="keyword">int</span> dis[<span class="number">300</span>][<span class="number">300</span>];</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">      <span class="keyword">int</span> n,m,a,b,s,t,x;</div><div class="line"></div><div class="line">      <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m)!=EOF)</div><div class="line">      &#123;</div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=n+<span class="number">1</span>;i++)</div><div class="line">                  <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=n+<span class="number">1</span>;j++)</div><div class="line">                  &#123;</div><div class="line">                        <span class="keyword">if</span> (i==j) dis[i][i]=<span class="number">0</span>;</div><div class="line">                        <span class="keyword">else</span> dis[i][j]=Max;</div><div class="line">                  &#125;</div><div class="line"></div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</div><div class="line">            &#123;</div><div class="line">                  <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;a,&amp;b,&amp;x);</div><div class="line">                  a++;b++;</div><div class="line">                  <span class="keyword">if</span> (dis[a][b]&gt;x) dis[a][b]=dis[b][a]=x;</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;=n;k++)</div><div class="line">                  <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</div><div class="line">                        <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</div><div class="line">                        dis[i][j]=min(dis[i][j],dis[i][k]+dis[k][j]);</div><div class="line"></div><div class="line">            <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;s,&amp;t);</div><div class="line">            <span class="keyword">if</span> (dis[s+<span class="number">1</span>][t+<span class="number">1</span>]==Max) <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,<span class="number">-1</span>);</div><div class="line">            <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,dis[s+<span class="number">1</span>][t+<span class="number">1</span>]);</div><div class="line">      &#125;</div><div class="line"></div><div class="line">      <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><br><br><br><br><br></p>
<h3 id="Bellman-Ford："><a href="#Bellman-Ford：" class="headerlink" title="Bellman_Ford："></a>Bellman_Ford：</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> Max=<span class="number">2100000</span>;</div><div class="line"><span class="keyword">int</span> dis[<span class="number">300</span>];</div><div class="line"></div><div class="line"><span class="keyword">struct</span> data</div><div class="line">&#123;</div><div class="line">      <span class="keyword">int</span> from,to,value;</div><div class="line">&#125;edge[<span class="number">22000</span>];</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">Bellman_Ford</span><span class="params">(<span class="keyword">int</span> n,<span class="keyword">int</span> m,<span class="keyword">int</span> s,<span class="keyword">int</span> t)</span></span></div><div class="line">&#123;</div><div class="line">      <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">300</span>;i++) dis[i]=Max;</div><div class="line">      dis[s]=<span class="number">0</span>;</div><div class="line"></div><div class="line">      <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</div><div class="line">            &#123;</div><div class="line">                  dis[edge[j].to]=min( dis[edge[j].to], dis[edge[j].from] + edge[j].value);</div><div class="line">            &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">      <span class="keyword">int</span> n,m,s,t;</div><div class="line"></div><div class="line">      <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m)!=EOF)</div><div class="line">      &#123;</div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</div><div class="line">            &#123;</div><div class="line">                  <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;edge[i].from,&amp;edge[i].to,&amp;edge[i].value);</div><div class="line">                  edge[i+m].to=edge[i].from;</div><div class="line">                  edge[i+m].from=edge[i].to;</div><div class="line">                  edge[i+m].value=edge[i].value;</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;s,&amp;t);</div><div class="line">            Bellman_Ford(n,m&lt;&lt;<span class="number">1</span>,s,t);</div><div class="line">            <span class="keyword">if</span> (dis[t]==Max) <span class="built_in">printf</span>(<span class="string">"-1\n"</span>);</div><div class="line">            <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,dis[t]);</div><div class="line">      &#125;</div><div class="line"></div><div class="line">      <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="Dijkstra-没优化-邻接矩阵："><a href="#Dijkstra-没优化-邻接矩阵：" class="headerlink" title="Dijkstra 没优化+邻接矩阵："></a>Dijkstra 没优化+邻接矩阵：</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> Max=<span class="number">210000</span>;</div><div class="line"><span class="keyword">int</span> dis[<span class="number">300</span>],vis[<span class="number">300</span>],Map[<span class="number">300</span>][<span class="number">300</span>];</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">dijkstra</span><span class="params">(<span class="keyword">int</span> n,<span class="keyword">int</span> m,<span class="keyword">int</span> s,<span class="keyword">int</span> t)</span></span></div><div class="line">&#123;</div><div class="line">      <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">300</span>;i++) dis[i]=Max;</div><div class="line">      <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">300</span>;i++) vis[i]=<span class="number">0</span>;</div><div class="line">      dis[s]=<span class="number">0</span>;</div><div class="line"></div><div class="line">      <span class="keyword">while</span> (<span class="number">1</span>)</div><div class="line">      &#123;</div><div class="line">            <span class="keyword">int</span> v=<span class="number">-1</span>;</div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</div><div class="line">                  <span class="keyword">if</span> (!vis[i] &amp;&amp; (v==<span class="number">-1</span> || dis[i]&lt;dis[v])) v=i;</div><div class="line">            <span class="keyword">if</span> (v==<span class="number">-1</span>) <span class="keyword">break</span>;</div><div class="line">            vis[v]=<span class="number">1</span>;</div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</div><div class="line">                  dis[i]=min(dis[i],dis[v]+Map[v][i]);</div><div class="line">      &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">      <span class="keyword">int</span> a,b,x,n,m,s,t;</div><div class="line"></div><div class="line">      <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m)!=EOF)</div><div class="line">      &#123;</div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">300</span>;i++)</div><div class="line">                  <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">300</span>;j++)</div><div class="line">                       <span class="keyword">if</span> (i==j) Map[i][j]=<span class="number">0</span>;</div><div class="line">                       <span class="keyword">else</span> Map[i][j]=Max;</div><div class="line"></div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</div><div class="line">            &#123;</div><div class="line">                  <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;a,&amp;b,&amp;x);</div><div class="line">                  <span class="keyword">if</span> (Map[a+<span class="number">1</span>][b+<span class="number">1</span>]&gt;x) Map[a+<span class="number">1</span>][b+<span class="number">1</span>]=Map[b+<span class="number">1</span>][a+<span class="number">1</span>]=x;</div><div class="line">            &#125;</div><div class="line">            <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;s,&amp;t);</div><div class="line">            dijkstra(n,m,s+<span class="number">1</span>,t+<span class="number">1</span>);</div><div class="line">            <span class="keyword">if</span> (dis[t+<span class="number">1</span>]!=Max) <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,dis[t+<span class="number">1</span>]);</div><div class="line">            <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"-1\n"</span>);</div><div class="line">      &#125;</div><div class="line"></div><div class="line">      <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><br><br><br></p>
<h2 id="Dijkstra-heap："><a href="#Dijkstra-heap：" class="headerlink" title="Dijkstra+heap："></a>Dijkstra+heap：</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> Max=<span class="number">21000000</span>;</div><div class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; Pair;</div><div class="line"></div><div class="line"><span class="keyword">int</span> dis[<span class="number">300</span>],head[<span class="number">300</span>];</div><div class="line"><span class="keyword">int</span> S,T,m,n,tail;</div><div class="line">priority_queue&lt; Pair,<span class="built_in">vector</span>&lt;Pair&gt;,greater&lt;Pair&gt; &gt; Q;</div><div class="line"></div><div class="line"><span class="keyword">struct</span> data</div><div class="line">&#123;</div><div class="line">      <span class="keyword">int</span> w,to,next;</div><div class="line">&#125;edge[<span class="number">3000</span>],k;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b,<span class="keyword">int</span> x)</span></span></div><div class="line">&#123;</div><div class="line">      edge[tail].w=x;</div><div class="line">      edge[tail].to=b;</div><div class="line">      edge[tail].next=head[a];</div><div class="line">      head[a]=tail++;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">Dijkstra</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">      Pair s;</div><div class="line">      <span class="keyword">int</span> v,val;</div><div class="line"></div><div class="line">      dis[S]=<span class="number">0</span>;</div><div class="line">      s.first=<span class="number">0</span>;</div><div class="line">      s.second=S;</div><div class="line">      Q.push(s);</div><div class="line"></div><div class="line">      <span class="keyword">while</span> (!Q.empty())</div><div class="line">      &#123;</div><div class="line">            Pair u=Q.top();</div><div class="line">            Q.pop();</div><div class="line">            val=u.first;</div><div class="line">            v=u.second;</div><div class="line">            <span class="keyword">if</span> (dis[v]&lt;val) <span class="keyword">continue</span>;</div><div class="line"></div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i=head[v]; i!=<span class="number">-1</span>; i=edge[i].next)</div><div class="line">            &#123;</div><div class="line">                  k=edge[i];</div><div class="line">                  <span class="keyword">if</span> (dis[k.to]&gt;dis[v]+k.w)</div><div class="line">                  &#123;</div><div class="line">                        dis[k.to]=dis[v]+k.w;</div><div class="line">                        Q.push(Pair(dis[k.to],k.to));</div><div class="line">                  &#125;</div><div class="line">            &#125;</div><div class="line">      &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">      <span class="keyword">int</span> a,b,x;</div><div class="line"></div><div class="line">      <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m)!=EOF)</div><div class="line">      &#123;</div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">300</span>;i++) dis[i]=Max;</div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">300</span>;i++) head[i]=<span class="number">-1</span>;</div><div class="line">            tail=<span class="number">0</span>;</div><div class="line"></div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</div><div class="line">            &#123;</div><div class="line">                  <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;a,&amp;b,&amp;x);</div><div class="line">                  build(a,b,x);</div><div class="line">                  build(b,a,x);</div><div class="line">            &#125;</div><div class="line">            <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;S,&amp;T);</div><div class="line">            Dijkstra();</div><div class="line">            <span class="keyword">if</span> (dis[T]!=Max) <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,dis[T]);</div><div class="line">            <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"-1\n"</span>);</div><div class="line">      &#125;</div><div class="line"></div><div class="line">      <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
      
        
        <tags>
            
            <tag> ACM题解 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[HDOJ 1215 【简单题】七夕节  &  HDOJ 1406 【简单题】完数]]></title>
      <url>https://b0lv42.github.io/2017/03/08/HDOJ%201215%20%E3%80%90%E7%AE%80%E5%8D%95%E9%A2%98%E3%80%91%E4%B8%83%E5%A4%95%E8%8A%82%20%20&amp;%20%20HDOJ%201406%20%E3%80%90%E7%AE%80%E5%8D%95%E9%A2%98%E3%80%91%E5%AE%8C%E6%95%B0/</url>
      <content type="html"><![CDATA[<p>【题目描述】<br>P1215：<br><a href="http://acm.hdu.edu.cn/showproblem.php?pid=1215" target="_blank" rel="external">http://acm.hdu.edu.cn/showproblem.php?pid=1215</a><br>P1406：<br><a href="http://acm.hdu.edu.cn/showproblem.php?pid=1406" target="_blank" rel="external">http://acm.hdu.edu.cn/showproblem.php?pid=1406</a></p>
<p>【思路】<br>这2个题差不多的，找完数。纯枚举..<br>P.S.1406有坑，sum1可能会大于sum2，要提前判断一下。</p>
<p>1215：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">#include&lt;stdio.h&gt;</div><div class="line">#include&lt;math.h&gt;</div><div class="line"></div><div class="line">int main()</div><div class="line">&#123;</div><div class="line">      int T,n,x;</div><div class="line">      long long sum;</div><div class="line"></div><div class="line">      scanf(&quot;%d&quot;,&amp;T);</div><div class="line"></div><div class="line">      while (T--)</div><div class="line">      &#123;</div><div class="line">            scanf(&quot;%d&quot;,&amp;n);</div><div class="line">            sum=0;</div><div class="line">            x=floor(sqrt(n)+0.5);</div><div class="line">            for (int i=1;i&lt;=x;i++)</div><div class="line">                  if (n%i==0)</div><div class="line">                  &#123;</div><div class="line">                        sum+=i;</div><div class="line">                        if (n/i&lt;n &amp;&amp; n/i&gt;i) sum+=n/i;</div><div class="line">                  &#125;</div><div class="line">            printf(&quot;%I64d\n&quot;,sum);</div><div class="line">      &#125;</div><div class="line"></div><div class="line">      return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>1406：</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">int</span> f[<span class="number">11000</span>];</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">      <span class="keyword">int</span> T,a,b,n,x;</div><div class="line">      <span class="keyword">long</span> <span class="keyword">long</span> sum;</div><div class="line"></div><div class="line">      f[<span class="number">0</span>]=<span class="number">0</span>;f[<span class="number">1</span>]=<span class="number">0</span>;</div><div class="line">      <span class="keyword">for</span> (<span class="keyword">int</span> n=<span class="number">2</span>;n&lt;<span class="number">11000</span>;n++)</div><div class="line">      &#123;</div><div class="line">            sum=<span class="number">0</span>;</div><div class="line">            x=<span class="built_in">floor</span>(<span class="built_in">sqrt</span>(n)+<span class="number">0.5</span>);</div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=x;i++)</div><div class="line">                  <span class="keyword">if</span> (n%i==<span class="number">0</span>)</div><div class="line">                  &#123;</div><div class="line">                        sum+=i;</div><div class="line">                        <span class="keyword">if</span> (n/i&lt;n &amp;&amp; n/i&gt;i) sum+=n/i;</div><div class="line">                  &#125;</div><div class="line">            <span class="keyword">if</span> (sum==n) f[n]=f[n<span class="number">-1</span>]+<span class="number">1</span>;</div><div class="line">            <span class="keyword">else</span> f[n]=f[n<span class="number">-1</span>];</div><div class="line">      &#125;</div><div class="line"></div><div class="line">      <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;T);</div><div class="line">      <span class="keyword">while</span> (T--)</div><div class="line">      &#123;</div><div class="line">            <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;a,&amp;b);</div><div class="line">            <span class="keyword">if</span> (a&gt;b) swap(a,b);</div><div class="line">            <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,f[b]-f[a<span class="number">-1</span>]);</div><div class="line">      &#125;</div><div class="line"></div><div class="line">      <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> ACM题解 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[HDOJ 1217 【Floyd】Arbitrage]]></title>
      <url>https://b0lv42.github.io/2017/03/06/HDOJ%201217%20%E3%80%90Floyd%E3%80%91Arbitrage/</url>
      <content type="html"><![CDATA[<h3 id="【题目描述】"><a href="#【题目描述】" class="headerlink" title="【题目描述】"></a>【题目描述】</h3><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=1217" target="_blank" rel="external">http://acm.hdu.edu.cn/showproblem.php?pid=1217</a><br><br></p>
<p>###【思路】<br>就是求最长路，因为起点和终点无数并且数据很小，所以用floyd也可以。<br>因为是倍数关系，所以当两个点不通时，边值就初始化为0，因为任何数乘以0都等于0嘛。<br>松弛操作完毕后，点i到自身的值即<code>dis[i][i]</code>若是大于1，就说明可以盈利啦。</p>
<p>P.S.1：此题为单向边，我之前建成了双向的orz<br>P.S.2：原来cin是不会读入回车和空格的，但是会吃掉它。就是说不用像scanf那样读入一个int的m后还得用getchar()吃掉一个回车符号，这里我调了半天才发现，果然还是语言基础太差啊，老是错在细节上面。<br><br></p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="built_in">string</span> Name[<span class="number">100</span>];</div><div class="line"><span class="keyword">double</span> dis[<span class="number">110</span>][<span class="number">110</span>];</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">      <span class="keyword">int</span> n,m,x,y,Case,flag;</div><div class="line">      <span class="keyword">double</span> num;</div><div class="line">      <span class="keyword">char</span> ch;</div><div class="line">      <span class="built_in">string</span> s1,s2;</div><div class="line"></div><div class="line">      Case=<span class="number">0</span>;</div><div class="line">      <span class="keyword">while</span> (<span class="built_in">cin</span>&gt;&gt;n &amp;&amp; n)</div><div class="line">      &#123;</div><div class="line">            Case++;</div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="built_in">cin</span>&gt;&gt;Name[i];</div><div class="line"></div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</div><div class="line">                  <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++) dis[i][j]=<span class="number">0</span>;</div><div class="line"></div><div class="line">            <span class="built_in">cin</span>&gt;&gt;m;;</div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</div><div class="line">            &#123;</div><div class="line">                  x=y=<span class="number">0</span>;</div><div class="line">                  <span class="built_in">cin</span>&gt;&gt;s1&gt;&gt;num&gt;&gt;s2;</div><div class="line">                  <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</div><div class="line">                  &#123;</div><div class="line">                        <span class="keyword">if</span> (Name[j]==s1) x=j;</div><div class="line">                        <span class="keyword">if</span> (Name[j]==s2) y=j;</div><div class="line">                        <span class="keyword">if</span> (x &amp;&amp; y) <span class="keyword">break</span>;</div><div class="line">                  &#125;</div><div class="line">                  dis[x][y]=num;</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;=n;k++)</div><div class="line">                  <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</div><div class="line">                        <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</div><div class="line">                        &#123;</div><div class="line">                              dis[i][j]=max(dis[i][j],dis[i][k]*dis[k][j]);</div><div class="line">                        &#125;</div><div class="line"></div><div class="line">            flag=<span class="number">0</span>;</div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</div><div class="line">                  <span class="keyword">if</span> (dis[i][i]&gt;<span class="number">1</span>)</div><div class="line">                  &#123;</div><div class="line">                        flag=<span class="number">1</span>;</div><div class="line">                        <span class="keyword">break</span>;</div><div class="line">                  &#125;</div><div class="line"></div><div class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"Case "</span>&lt;&lt;Case&lt;&lt;<span class="string">": "</span>;</div><div class="line">            <span class="keyword">if</span> (flag) <span class="built_in">cout</span>&lt;&lt;<span class="string">"Yes"</span>&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">            <span class="keyword">else</span> <span class="built_in">cout</span>&lt;&lt;<span class="string">"No"</span>&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">      &#125;</div><div class="line"></div><div class="line">      <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> ACM题解 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[HDOJ 1869 【Floyd】六度分离]]></title>
      <url>https://b0lv42.github.io/2017/03/05/HDOJ%201869%20%E3%80%90Floyd%E3%80%91%E5%85%AD%E5%BA%A6%E5%88%86%E7%A6%BB/</url>
      <content type="html"><![CDATA[<h3 id="【题目描述】"><a href="#【题目描述】" class="headerlink" title="【题目描述】"></a>【题目描述】</h3><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=1869" target="_blank" rel="external">http://acm.hdu.edu.cn/showproblem.php?pid=1869</a><br><br><br><br></p>
<p>###【思路】<br>因为是任意起点和任意的中点而且数据也很小，所以用floyd比较合适。</p>
<p>PS1：题目有坑，编号是从0到n-1的，我习惯用1到n编号<br>PS2：在<code>dis[i][j]=min(dis[i][j],dis[i][k]+dis[k][j])</code>松弛操作这里如果给dis数组赋的初值太大，会炸，比如我之前赋的21亿，操作时21亿+21亿，就炸了，WA了一发。<br><br></p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">int</span> dis[<span class="number">300</span>][<span class="number">300</span>];</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">      <span class="keyword">int</span> n,m,a,b,check;</div><div class="line"></div><div class="line">      <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m)!=EOF)</div><div class="line">      &#123;</div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">250</span>;i++)</div><div class="line">                  <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">250</span>;j++)</div><div class="line">                        <span class="keyword">if</span> (i==j) dis[i][j]==<span class="number">0</span>;</div><div class="line">                        <span class="keyword">else</span> dis[i][j]=<span class="number">210000000</span>;</div><div class="line"></div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</div><div class="line">            &#123;</div><div class="line">                  <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;a,&amp;b);</div><div class="line">                  dis[a+<span class="number">1</span>][b+<span class="number">1</span>]=dis[b+<span class="number">1</span>][a+<span class="number">1</span>]=<span class="number">1</span>;</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;=n;k++)</div><div class="line">                  <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</div><div class="line">                        <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</div><div class="line">                              dis[i][j]=min(dis[i][j],dis[i][k]+dis[k][j]);              <span class="comment">//floyd</span></div><div class="line"></div><div class="line">            check=<span class="number">0</span>;</div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</div><div class="line">            &#123;</div><div class="line">                  <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</div><div class="line">                        <span class="keyword">if</span> (dis[i][j]&gt;<span class="number">7</span>)</div><div class="line">                        &#123;</div><div class="line">                              check=<span class="number">1</span>;</div><div class="line">                              <span class="keyword">break</span>;</div><div class="line">                        &#125;</div><div class="line">                  <span class="keyword">if</span> (check==<span class="number">1</span>) <span class="keyword">break</span>;</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            <span class="keyword">if</span> (check==<span class="number">1</span>) <span class="built_in">printf</span> (<span class="string">"No\n"</span>);</div><div class="line">            <span class="keyword">else</span> <span class="built_in">printf</span> (<span class="string">"Yes\n"</span>);</div><div class="line">      &#125;</div><div class="line"></div><div class="line">      <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> ACM题解 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[HDOJ 1290 【递推】献给杭电五十周年校庆的礼物]]></title>
      <url>https://b0lv42.github.io/2017/03/04/HDOJ%201290%20%E3%80%90%E9%80%92%E6%8E%A8%E3%80%91%E7%8C%AE%E7%BB%99%E6%9D%AD%E7%94%B5%E4%BA%94%E5%8D%81%E5%91%A8%E5%B9%B4%E6%A0%A1%E5%BA%86%E7%9A%84%E7%A4%BC%E7%89%A9/</url>
      <content type="html"><![CDATA[<h3 id="【题目描述】"><a href="#【题目描述】" class="headerlink" title="【题目描述】"></a>【题目描述】</h3><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=1290" target="_blank" rel="external">http://acm.hdu.edu.cn/showproblem.php?pid=1290</a><br><br></p>
<p>###【思路】<br>和直线切割平面是一个道理，要想得到最多的平面，第i条直线就得与前i-1条直线相交，此时它自己被分割成i段，每段都把它所在的平面切成2块，所以对于平面，f[i]=f[i-1]+i;<br>平面切割空间时，第i个平面必须要与前i-1个平面全部相交，即自己被i-1条直线切割成f[i-1]个平面，每个平面把它所在的空间切成2块，所以对于空间，zone[i]=zone[i-1]+f[i-1]。<br>P.S.输出需要用long long。<br><br></p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="keyword">long</span> <span class="keyword">long</span> f[<span class="number">1100</span>],zone[<span class="number">1100</span>];</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">      <span class="keyword">int</span> n;</div><div class="line"></div><div class="line">      f[<span class="number">1</span>]=<span class="number">2</span>;</div><div class="line">      f[<span class="number">2</span>]=<span class="number">4</span>;</div><div class="line">      zone[<span class="number">1</span>]=<span class="number">2</span>;</div><div class="line">      zone[<span class="number">2</span>]=<span class="number">4</span>;</div><div class="line"></div><div class="line">      <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">3</span>;i&lt;<span class="number">1100</span>;i++)</div><div class="line">      &#123;</div><div class="line">            f[i]=f[i<span class="number">-1</span>]+i;</div><div class="line">            zone[i]=zone[i<span class="number">-1</span>]+f[i<span class="number">-1</span>];</div><div class="line">      &#125;</div><div class="line"></div><div class="line">      <span class="keyword">while</span> (~<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n))</div><div class="line">            <span class="built_in">printf</span>(<span class="string">"%I64d\n"</span>,zone[n]);</div><div class="line"></div><div class="line">      <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> ACM题解 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[HDOJ 1051 【贪心】 Wooden Sticks]]></title>
      <url>https://b0lv42.github.io/2017/03/03/HDOJ%201051%20%E3%80%90%E8%B4%AA%E5%BF%83%E3%80%91%20Wooden%20Sticks/</url>
      <content type="html"><![CDATA[<h3 id="【题目描述】"><a href="#【题目描述】" class="headerlink" title="【题目描述】"></a>【题目描述】</h3><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=1051" target="_blank" rel="external">http://acm.hdu.edu.cn/showproblem.php?pid=1051</a><br><br><br><br></p>
<h3 id="【思路】"><a href="#【思路】" class="headerlink" title="【思路】"></a>【思路】</h3><p>就是一个简单的贪心，我还以为是LIS….<br>思路就是对于每一根木棍，如果它没有使用过的话，如果L和W都&gt;=当前，就用它更新当前，并标记使用过。如果不满足&gt;=，就把它加入队列，作为新的开头。每次都是取出队列头，如此循环，直到所有的木棍全部被切割完成。</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">int</span> Use[<span class="number">11000</span>];</div><div class="line"></div><div class="line"><span class="keyword">struct</span> data</div><div class="line">&#123;</div><div class="line">      <span class="keyword">int</span> l,w;</div><div class="line">&#125;wood[<span class="number">11000</span>],change[<span class="number">11000</span>];</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(data a,data b)</span></span></div><div class="line">&#123;</div><div class="line">      <span class="keyword">if</span> (a.l!=b.l) <span class="keyword">return</span> (a.l&lt;b.l);    <span class="comment">//按长度排序</span></div><div class="line">      <span class="keyword">return</span> (a.w&lt;b.w);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">      <span class="keyword">int</span> n,x,y,t,T,ans,num;</div><div class="line"></div><div class="line">      <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;T);</div><div class="line"></div><div class="line">      <span class="keyword">while</span> (T--)</div><div class="line">      &#123;</div><div class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</div><div class="line">            &#123;</div><div class="line">                  Use[i]=<span class="number">1</span>;</div><div class="line">                  <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;wood[i].l,&amp;wood[i].w);</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            sort(wood+<span class="number">1</span>,wood+<span class="number">1</span>+n,cmp);</div><div class="line"></div><div class="line">            x=<span class="number">0</span>;y=<span class="number">0</span>;</div><div class="line">            Use[<span class="number">1</span>]=<span class="number">0</span>;</div><div class="line">            num=<span class="number">1</span>;ans=<span class="number">1</span>;</div><div class="line">            change[<span class="number">1</span>].l=wood[<span class="number">1</span>].l;</div><div class="line">            change[<span class="number">1</span>].w=wood[<span class="number">1</span>].w;</div><div class="line"></div><div class="line">            <span class="keyword">while</span> (num&lt;n)</div><div class="line">            &#123;</div><div class="line">                  t=<span class="number">1</span>;</div><div class="line">                  x=change[<span class="number">1</span>].l;</div><div class="line">                  y=change[<span class="number">1</span>].w;</div><div class="line"></div><div class="line">                  <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</div><div class="line">                        <span class="keyword">if</span> (Use[i]==<span class="number">1</span>)</div><div class="line">                        &#123;</div><div class="line">                              <span class="keyword">if</span> ( x&lt;=wood[i].l &amp;&amp; y&lt;=wood[i].w )</div><div class="line">                              &#123;</div><div class="line">                                    num++;</div><div class="line">                                    x=wood[i].l;</div><div class="line">                                    y=wood[i].w;</div><div class="line">                                    Use[i]=<span class="number">0</span>;</div><div class="line">                              &#125;</div><div class="line">                              <span class="keyword">else</span> <span class="keyword">if</span> (t==<span class="number">1</span>)</div><div class="line">                              &#123;</div><div class="line">                                    num++;</div><div class="line">                                    ans++;</div><div class="line">                                    Use[i]=<span class="number">0</span>;</div><div class="line">                                    change[t].l=wood[i].l;</div><div class="line">                                    change[t].w=wood[i].w;</div><div class="line">                                    t++;</div><div class="line">                              &#125;</div><div class="line">                        &#125;</div><div class="line">            &#125;</div><div class="line">            <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</div><div class="line">      &#125;</div><div class="line"></div><div class="line">      <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> ACM题解 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[HDOJ 1098 【数学题】Ignatius's puzzle]]></title>
      <url>https://b0lv42.github.io/2017/03/02/HDOJ%201098%20%E3%80%90%E6%95%B0%E5%AD%A6%E9%A2%98%E3%80%91Ignatius's%20puzzle/</url>
      <content type="html"><![CDATA[<h3 id="【题目描述】"><a href="#【题目描述】" class="headerlink" title="【题目描述】"></a>【题目描述】</h3><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=1098" target="_blank" rel="external">http://acm.hdu.edu.cn/showproblem.php?pid=1098</a><br><br></p>
<h3 id="【思路】"><a href="#【思路】" class="headerlink" title="【思路】"></a>【思路】</h3><p>要求是给定k，求一个最小的a，对任意的x都能使f(x)整除65，所以f(1)=5+13+a<em>k=18+a</em>k，只要枚举a就可以啦，范围是0到64，因为对数m取模的话，结果是0到m-1循环的啦。查了下解题证明，即证明f(x+1)也成立。</p>
<blockquote>
<p> 求解思路：</p>
<p>f(x)=5<em>x^13+13</em>x^5+k<em>a</em>x;</p>
<p>其中题中”f(x)|65”表示对于任意的整数x,f(x)都能被65整除.所以不难推断:f(x+1)|65也成立.</p>
<p>f(x+1)=5<em>(x+1)^13+13</em>(x+1)^5+k<em>a</em>(x+1),</p>
<p>根据二项式定理:(a+b)^n=C(n,0)a^n+C(n,1)a^(n-1)<em>b+C(n,2)a^(n-2)</em>b^2+…+C(n,n)b^n</p>
<p>得：f(x+1)=5<em>(C(13,0)+C(13,1)</em>x+C(13,2)<em>x^2+…+C(13,13)</em>x^13) +<br>13<em>(C(5,0)+C(5,1)</em>x+…+C(5,5)<em>x^5) + k</em>a*(x+1);</p>
<p>从中提取出f(x)后得：</p>
<p>f(x+1)=f(x)+5<em>(C(13,0) + C(13,1)</em>x+C(13,2)<em>x^2+…+C(13,12)</em>x^12) +<br>13<em>(C(5,0)+C(5,1)</em>x+…+C(5,4)<em>x^4) + k</em>a;</p>
<p>不难看出出了5<em>C(13,0) 、13</em>C(5,0)和k<em>a三项以外，其他项无论x取任意整数都能被65整除,所以如果5</em>C(13,0)<br>+13<em>C(5,0)+k</em>a(相当于18+k*a)能被65整除的话，就可以得出f(x+1)|65了。</p>
<p>再验证一下f(1)=5+13+k<em>a=18+k</em>a同样适用。</p>
<p>所以最终的问题就是给定一个非负整数k,使得(18+k*a)|65,输出满足此条件的最小的非负整数a。</p>
</blockquote>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">      <span class="keyword">int</span> k,flag;</div><div class="line"></div><div class="line">      <span class="keyword">while</span> (~<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;k))</div><div class="line">      &#123;</div><div class="line">            flag=<span class="number">1</span>;</div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">64</span>;i++)</div><div class="line">            &#123;</div><div class="line">                  <span class="keyword">if</span> ((<span class="number">18</span>+k*i)%<span class="number">65</span>==<span class="number">0</span>)</div><div class="line">                  &#123;</div><div class="line">                        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,i);</div><div class="line">                        flag=<span class="number">0</span>;</div><div class="line">                        <span class="keyword">break</span>;</div><div class="line">                  &#125;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">if</span> (flag) <span class="built_in">printf</span>(<span class="string">"no\n"</span>);</div><div class="line">      &#125;</div><div class="line"></div><div class="line">      <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> ACM题解 </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
