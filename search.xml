<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[32位机设置16位短地址的意义]]></title>
      <url>https://b0lv42.github.io/2017/04/21/32%E4%BD%8D%E6%9C%BA%E8%AE%BE%E7%BD%AE16%E4%BD%8D%E6%AE%B5%E5%86%85%E5%9C%B0%E5%9D%80%E7%9A%84%E6%84%8F%E4%B9%89/</url>
      <content type="html"></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[哇呀呀！]]></title>
      <url>https://b0lv42.github.io/2017/04/21/qwq/</url>
      <content type="html"><![CDATA[<h1 id="哇！"><a href="#哇！" class="headerlink" title="哇！"></a>哇！</h1><h2 id="哇！-1"><a href="#哇！-1" class="headerlink" title="哇！"></a>哇！</h2><h3 id="哇！-2"><a href="#哇！-2" class="headerlink" title="哇！"></a>哇！</h3><h4 id="哇！-3"><a href="#哇！-3" class="headerlink" title="哇！"></a>哇！</h4><h5 id="哇！-4"><a href="#哇！-4" class="headerlink" title="哇！"></a>哇！</h5><h6 id="哇！-5"><a href="#哇！-5" class="headerlink" title="哇！"></a>哇！</h6>]]></content>
      
        
        <tags>
            
            <tag> biantai </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Linux自定义系统调用]]></title>
      <url>https://b0lv42.github.io/2017/04/19/%E5%90%91linux%E5%86%85%E6%A0%B8%E6%B7%BB%E5%8A%A0%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8/</url>
      <content type="html"><![CDATA[<p>原文来自：<a href="https://tecotaku.cn/blog/?p=256" target="_blank" rel="external">Sino大佬的博客</a><br><br><br><br></p>
<h2 id="添加系统调用"><a href="#添加系统调用" class="headerlink" title="添加系统调用"></a>添加系统调用</h2><p><br><br><br></p>
<h3 id="添加系统调用的头文件索引"><a href="#添加系统调用的头文件索引" class="headerlink" title="添加系统调用的头文件索引"></a>添加系统调用的头文件索引</h3><p>我们要调用syscall是通过unistd提供的一系列系统接口，其中由C提供的接口需要通过修改<code>unistd_64.h</code>这个文件来指定。<br>打开是存放内核源码的地方，进入子目录<code>arch/x86/include/generated/uapi/asm/</code></p>
<blockquote>
<p>比如在我的Linux里此文件是位于 <code>/usr/src/linux-4.10.8/arch/x86/include/generated/uapi/asm/</code> 里的<br>通过使用vim或者自带的gedit打开这个文件，因为打开这个文件需要管理员权限，所以需要在命令前加上sudo。在endif之前添加一个新的系统调用号：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">#define __NR_qwq 333</div></pre></td></tr></table></figure></p>
<p><code>333</code>表示系统调用号，不一定要和前面的连续，只要不重复就行啦，<code>qwq</code>则是系统调用名。</p>
</blockquote>
<h3 id="修改系统调用向量表"><a href="#修改系统调用向量表" class="headerlink" title="修改系统调用向量表"></a>修改系统调用向量表</h3><p>在<code>/usr/src/linux-4.10.8/arch/x86/entry/syscalls</code>中打开<code>syscall_64.tbl</code>文件，向里面添加：</p>
<blockquote>
<p>333 64 qwq sys_qwq<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">//以内核版本为例，我的版本是4.10.8所以是进入linux-4.10.8文件夹</div><div class="line">//此处的333与你之前添加的系统调用号一致，qwq是调用函数名，sys_qwq是实际的调用函数，这个名字和调用函数名没有关系哦。</div></pre></td></tr></table></figure></p>
</blockquote>
<h3 id="添加调用实现"><a href="#添加调用实现" class="headerlink" title="添加调用实现"></a>添加调用实现</h3><p>/* 后就是添加通过调用号要调用到的程序了 打开<code>/usr/src/linux-4.10.8/include/linux/syscalls.h</code>添加一个函数声明</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="function">asmlinkage <span class="keyword">long</span> <span class="title">sys_qwq</span><span class="params">(<span class="keyword">void</span>)</span></span>;</div></pre></td></tr></table></figure>
<p>*/</p>
<p>然后打开<code>/usr/src/linux-4.10.8/kernel/sys.c</code>，并在结尾添加函数：<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">SYSCALL_DEFINE2(qwq,<span class="keyword">long</span>,a,<span class="keyword">long</span>,b)</div><div class="line">&#123;</div><div class="line">	<span class="keyword">int</span> i,t;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<blockquote>
<p>DEFINE后面的数字是传入的参数个数，<code>qwq</code>为入口地址，注意这里参数类型和参数名字之间均要用<code>,</code>隔开<br>通过 传入一个long型数据和一个字符串到内核空间，在内核空间打印完后返回一个1</p>
</blockquote>
<h3 id="重新编译"><a href="#重新编译" class="headerlink" title="重新编译"></a>重新编译</h3><p>确定所有文件保存后，执行:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ sudo make -j6 bzImage   //内核数+2</div><div class="line">$ sudo make install</div></pre></td></tr></table></figure></p>
<blockquote>
<p>然后要重启哦！</p>
</blockquote>
<p><br><br><br></p>
<h2 id="使用系统调用"><a href="#使用系统调用" class="headerlink" title="使用系统调用"></a>使用系统调用</h2><p><br><br><br></p>
<h3 id="编写一个小程序"><a href="#编写一个小程序" class="headerlink" title="编写一个小程序"></a>编写一个小程序</h3><p>新建一个文件 test.cpp 输入以下代码<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/syscall.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">long</span> ret = syscall(<span class="number">333</span>); <span class="comment">//syscall 调用号 参数1 之后为系统调用的参数列表</span></div><div class="line">    <span class="built_in">printf</span>(<span class="string">"result is %ld\n"</span>, ret);</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="编译程序"><a href="#编译程序" class="headerlink" title="编译程序"></a>编译程序</h3><p>输入命令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ g++ test.cpp -o <span class="built_in">test</span></div></pre></td></tr></table></figure></p>
<p>等待执行完之后，程序就编译成功啦</p>
<h3 id="执行程序"><a href="#执行程序" class="headerlink" title="执行程序"></a>执行程序</h3><p>输入命令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo ./<span class="built_in">test</span></div></pre></td></tr></table></figure></p>
<p>屏幕上会打印出 <code>result is 1</code> 因为我们的系统调用返回数字就是1</p>
<h3 id="查看内核输出信息"><a href="#查看内核输出信息" class="headerlink" title="查看内核输出信息"></a>查看内核输出信息</h3><p>输入命令:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ dmesg | grep <span class="string">"hello"</span></div></pre></td></tr></table></figure></p>
<p>即可看到内核中输出的printk信息</p>
<blockquote>
<p>grep “hello” 为过滤出包含”hello”的信息<br>此处有坑…如果是在CB里面运行的，记得把运行弹出的shell关掉啊，不然看不到输出消息的…qwq</p>
</blockquote>
<p>Printk()会依据日志级别将指定信息输出到控制台或日志文件中，其格式为：<br>printk(日志级别 “消息文本”)；<br>如 printk(KERN_ALERT”hello,world\n”);<br>一般情况下，优先级高于控制台日志级别的消息将被打印到控制台，优先级低于控制台日志级别的消息将被打印到 messages 日志文件中，而在伪终端下不打印任何的信息。有关其更详细的使用说明请大家自行查阅资料学习。<br>加载模块后，用户可使用 dmesg 命令查看模块初始化函数中的输出信息，如使用 “ dmesg | tail -20 ” 来输出“dmesg”命令的最后 20 行日志。</p>
]]></content>
      
        
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 大作业 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[利用hexo在windows下搭建静态博客ovo]]></title>
      <url>https://b0lv42.github.io/2017/04/02/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</url>
      <content type="html"><![CDATA[<h2 id="搭建博客前的本地工作"><a href="#搭建博客前的本地工作" class="headerlink" title="搭建博客前的本地工作"></a>搭建博客前的本地工作</h2><p><br></p>
<h3 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h3><p><code>Git</code>是一个版本控制工具，我们主要使用Git Bash功能把本地的hexo内容提交到Github上去。<br><code>Github</code>是一个用Git做版本控制的项目托管平台，有很多源码，在全世界适用范围广泛。</p>
<hr>
<p><a href="https://git-scm.com/downloads" target="_blank" rel="external">官网下载安装Git（推荐）</a> 或者 <a href="https://github.com/git/git" target="_blank" rel="external">从Github获取</a><br>要根据自己的系统选择合适的版本下载安装哦~</p>
<p><br></p>
<h3 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h3><p><a href="http://nodejs.cn/" target="_blank" rel="external">Node.js</a>是一个Javascript运行环境，用来生成静态页面。</p>
<blockquote>
<p>不用那么乖的去查API文档啦，只要安装好就可以了。</p>
</blockquote>
<p><br></p>
<h3 id="安装编辑器（可选）"><a href="#安装编辑器（可选）" class="headerlink" title="安装编辑器（可选）"></a>安装编辑器（可选）</h3><p>在后面配置文件的时候，系统自带的记事本支持很差，为了能够更方便的编辑，可以选择下载<code>Sublime</code>,<code>Text3</code>,<code>VS code</code>或者<code>Notepad++</code>，方便编辑。</p>
<p><br></p>
<h3 id="安装并部署Hexo"><a href="#安装并部署Hexo" class="headerlink" title="安装并部署Hexo"></a>安装并部署Hexo</h3><p>Hexo是一个采用Node.js的静态博客框架。<br><a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="external">Hexo官网（中文支持）</a> 或者 <a href="https://github.com/hexojs/hexo" target="_blank" rel="external">从Github获取</a></p>
<p>你可以使用Hexo官网文档达到与下述步骤同样的效果，<code>强烈建议你使用官网文档获得最新的帮助和支持。</code><br>极客学院在获得允许的情况下制作了Hexo说明文档的离线版本：<br>点击下载 [PDF版] (<a href="http://passport.jikexueyuan.com/sso/login?referer=http%3A%2F%2Fwiki.jikexueyuan.com%2Fdownload%2Fhexo-document%2Fpdf)[ePub版](http://passport.jikexueyuan.com/sso/login?referer=http%3A%2F%2Fwiki.jikexueyuan.com%2Fdownload%2Fhexo-document%2Fepub" target="_blank" rel="external">http://passport.jikexueyuan.com/sso/login?referer=http%3A%2F%2Fwiki.jikexueyuan.com%2Fdownload%2Fhexo-document%2Fpdf)[ePub版](http://passport.jikexueyuan.com/sso/login?referer=http%3A%2F%2Fwiki.jikexueyuan.com%2Fdownload%2Fhexo-document%2Fepub</a>) 或者访问 <a href="http://wiki.jikexueyuan.com/project/hexo-document/" target="_blank" rel="external">极客学院 Wiki</a></p>
<hr>
<p>所有必备的应用程序安装完成后，即可使用npm安装 Hexo：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install -g hexo-cli</div></pre></td></tr></table></figure></p>
<p>如果npm install时，出现npm error: RPC failed错误：<br>开启翻墙软件或将npm镜像<code>修改为淘宝镜像</code>。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm config <span class="built_in">set</span> registry <span class="string">"https://registry.npm.taobao.org"</span></div></pre></td></tr></table></figure></p>
<p>在<code>你想要放置博客文件的位置</code>新建一个名为hexo的文件夹（<code>不要选择需要管理员权限才能创建文件的文件夹</code>），然后在hexo文件夹内右键Git Bash Here，<a href="https://hexo.io/zh-cn/docs/commands.html" target="_blank" rel="external">常用的Hexo指令</a>执行下列命令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo init</div></pre></td></tr></table></figure></p>
<p>然后，Hexo会自动为你生成你网站所需要的全部文件。此时，我们已经在<code>本地</code>搭建好Blog了。<br>在hexo文件夹内右键Git Bash Here，执行下列命令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ hexo g  </div><div class="line">$ hexo s</div></pre></td></tr></table></figure></p>
<p>然后在浏览器输入 <a href="http://localhost:4000" target="_blank" rel="external">http://localhost:4000</a> 可以看到当前博客效果，按Ctrl+C停止。<br>如果依旧无法访问表示4000端口（默认）被占用， 输入：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo s -p 5000</div></pre></td></tr></table></figure></p>
<p>这里切换成5000端口，浏览器输入 <a href="http://localhost:5000" target="_blank" rel="external">http://localhost:5000</a> 访问即可。</p>
<p><br></p>
<h2 id="美化博客"><a href="#美化博客" class="headerlink" title="美化博客"></a>美化博客</h2><p>推荐通过<a href="http://theme-next.iissnan.com/" target="_blank" rel="external">Next主题使用文档</a>学习并且了解Hexo主站和皮肤的配置。<br>我自己用的是<a href="http://moxfive.coding.me/yelee/" target="_blank" rel="external">Yelee主题</a>啦。</p>
<p><br></p>
<h2 id="Github"><a href="#Github" class="headerlink" title="Github"></a>Github</h2><p><br></p>
<h3 id="注册并登陆Github"><a href="#注册并登陆Github" class="headerlink" title="注册并登陆Github"></a>注册并登陆Github</h3><p>Github用来做博客的远程创库、域名、服务器等等。<br>打开Github的官方网站，注册一个Github账户。<br>记住注册时的<code>用户名</code>、<code>密码</code>和<code>验证绑定用的邮箱</code>。</p>
<p><br></p>
<h3 id="开启Github-Page服务"><a href="#开启Github-Page服务" class="headerlink" title="开启Github Page服务"></a>开启Github Page服务</h3><p>点击New repository建立一个新的仓库，重要的事情说三遍：<br><strong><code>仓库名和自己的ID一致！！！</code></strong><br><strong><code>仓库名和自己的ID一致！！！</code></strong><br><strong><code>仓库名和自己的ID一致！！！</code></strong><br>标准格式：用户名.github.io<br>举个栗子：用户名为“qwq”，仓库名为“qwq.github.io”</p>
<p>勾选<code>默认生成一个README.md文件</code>，会后台自动开启pages。<br>如果成功开启，在对应仓库的<code>setting</code> - <code>GitHub Pages</code>会有提示：</p>
<blockquote>
<p>Your site is published at <a href="https://用户名.github.io/" target="_blank" rel="external">https://用户名.github.io/</a><br>GitHub Pages is designed to host your personal, organization, or project pages from a GitHub repository.</p>
</blockquote>
<p><br></p>
<h3 id="配置ssh密钥"><a href="#配置ssh密钥" class="headerlink" title="配置ssh密钥"></a>配置ssh密钥</h3><blockquote>
<p>Github 除了ssh 还可以用https 连接哟~</p>
</blockquote>
<p>打开桌面的Git Bash，检查本机的密钥：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">cd</span> ~/.ssh</div></pre></td></tr></table></figure></p>
<blockquote>
<p>密钥生成文件的位置为：<br>windows: C:/Users/用户名/.ssh/<br>mac: ~/.ssh/<br>.ssh文件为隐藏文件，需要先设置隐藏文件可见才可以看到</p>
</blockquote>
<p>如果提示：<code>No such file or directory</code> 说明你是第一次使用Git。<br>如果不是第一次使用Git，输入下列指令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ mkdir key_backup  </div><div class="line">$ cp id_rsa* key_backup  </div><div class="line">$ rm id_rsa*</div></pre></td></tr></table></figure></p>
<p>生成自己的密钥，记得””中间的邮箱改成自己的。生成过程中会让你输入passphrase口令，可以直接回车，以后出现都是空密码。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ssh-keygen -t rsa -C <span class="string">"Your_Email@Yourmail.com"</span></div></pre></td></tr></table></figure></p>
<p>生成密钥后，在目录（系统盘下的 用户 或者 Users 文件夹 /用户名/.ssh）找到私钥 <code>id_rsa</code> 和公钥 <code>id_rsa.pub</code> 这两个文件。<strong>千万不要把私钥文件 id_rsa 透露给任何人</strong>，否则别人可以以管理员身份登录你的blog。</p>
<h4 id="建立和Github的SSH连接："><a href="#建立和Github的SSH连接：" class="headerlink" title="建立和Github的SSH连接："></a>建立和Github的SSH连接：</h4><p>使用文本工具打开id_rsa.pub,复制里面的所有内容。进入Github主账户下面的<a href="https://github.com/settings/keys" target="_blank" rel="external">Settings</a> - SSH and GPG keys. New SSH key，把刚才复制的东西全部粘贴进去，然后Add添加。</p>
<h4 id="测试是否可以连接到服务器："><a href="#测试是否可以连接到服务器：" class="headerlink" title="测试是否可以连接到服务器："></a>测试是否可以连接到服务器：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ssh -T git@github.com</div></pre></td></tr></table></figure>
<p>如果是第一次连接，需要输入yes后回车，提示输入passphrase，如果刚才是空密码，那么直接回车过去就好。<br>如果出现下面的字符，就说明成功了：</p>
<blockquote>
<p>Hi xxxxx! You’ve successfully authenticated, but GitCafe does not provide shell access.</p>
</blockquote>
<p><br></p>
<h3 id="设置Git账户信息"><a href="#设置Git账户信息" class="headerlink" title="设置Git账户信息"></a>设置Git账户信息</h3><p>在桌面右键Git Bash Here，键入：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ git config --global user.name <span class="string">"yourname"</span>  </div><div class="line">$ git config --global user.email <span class="string">"yourmaill@maili.com"</span></div></pre></td></tr></table></figure></p>
<p>要和注册Github的信息保持一致！</p>
<p><br></p>
<h3 id="添加Pages目录"><a href="#添加Pages目录" class="headerlink" title="添加Pages目录"></a>添加Pages目录</h3><p>如果直接上传，上传上去的只是所谓的博客源码，如果我们要让我们博客显示出来，就要建立pages目录。</p>
<p>打开hexo文件夹，右键Git Bash Here，然后键入：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">echo</span> <span class="string">'Hello, world'</span> &gt; index.html  </div><div class="line">git init  </div><div class="line">git add .  </div><div class="line">git commit <span class="_">-a</span> -m <span class="string">'Hello, world!'</span>  </div><div class="line">git remote add origin git@github.com:用户名/用户名.github.io  </div><div class="line">git checkout -b master  </div><div class="line">git push origin master</div></pre></td></tr></table></figure></p>
<p>这里提两个点：<br>1.上述git add操作后面是空格+.，别忘记了空格；<br>2.默认创建的仓库”用户名.github.io”有一个默认分支master,似乎Github Page功能不支持其它名字的branch分支，所以其它名字的分支可以作为备份，但是不能作为page页面。</p>
<p><br></p>
<h3 id="设置使Hexo默认更新到Github"><a href="#设置使Hexo默认更新到Github" class="headerlink" title="设置使Hexo默认更新到Github"></a>设置使Hexo默认更新到Github</h3><p>用编辑器打开hexo文件夹下的_config.yml文件(称为<code>站点配置文件</code>)，打开之后把最后的deploy改为：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">deploy:  </div><div class="line">  <span class="built_in">type</span>: git  </div><div class="line">  repository: git@github.com:用户名/用户名.github.io  </div><div class="line">  branch: master</div></pre></td></tr></table></figure>
<p>注意冒号后面的空格，检查非常严格。</p>
<p><br></p>
<h3 id="完成配置"><a href="#完成配置" class="headerlink" title="完成配置"></a>完成配置</h3><p>每一次本地测试完成后，在Hexo目录右键Git Bash，键入：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ hexo g  </div><div class="line">$ hexo d</div></pre></td></tr></table></figure></p>
<blockquote>
<p>这里的hexo g不是复制，是渲染，用主题帮你的md加上css,js效果<br>hexo d是将本地文件上传到github</p>
</blockquote>
<p>你的网站地址就是<code>用户名.github.io</code></p>
<hr>
<p><code>注意，如果你发现本地hexo s测试达到预期效果，但是Github Page没有更新，请再次执行 hexo d 指令。</code></p>
<p><br></p>
<h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><p>在阅读这个部分的内容前，希望你充分阅读了<a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="external">Hexo官网（中文支持）</a>和<a href="http://theme-next.iissnan.com/" target="_blank" rel="external">Next主题使用文档</a>，绝大多数的问题都能够从中得到解决。</p>
<p><br></p>
<h3 id="如果报错："><a href="#如果报错：" class="headerlink" title="如果报错："></a>如果报错：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ERROR Deployer not found: git</div><div class="line">ERROR Deployer not found: github</div></pre></td></tr></table></figure>
<p>解决方法：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-deployer-git --save</div></pre></td></tr></table></figure></p>
<p><br></p>
<h3 id="备份！"><a href="#备份！" class="headerlink" title="备份！"></a>备份！</h3><p>如果你觉得默认的主题不那么让人满意，想要自己修改样式的话，请一定记得：<br><strong><code>先备份！备份！备份</code></strong></p>
<blockquote>
<p>来自博客崩了无数次的果子的心声</p>
</blockquote>
<p><br></p>
<h3 id="电脑重装或者更换电脑使用后如何管理博客"><a href="#电脑重装或者更换电脑使用后如何管理博客" class="headerlink" title="电脑重装或者更换电脑使用后如何管理博客"></a>电脑重装或者更换电脑使用后如何管理博客</h3><p>这个问题其实就是本地的文件丢失啦，但是没有关系，我们可以从github上将以前的文件下载到本地。<br>教程前面讲的node.js, hexo, git仍然需要你安装并部署好，然后我们只需要在想要放置博客本地文件的文件夹右键Get Bash Here，键入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ clone URL</div></pre></td></tr></table></figure></p>
<blockquote>
<p>这个URL是指你放于github上的blog文件地址</p>
</blockquote>
<hr>
<p>其他问题请从互联网等渠道获取解决方式。</p>
<blockquote>
<p>你为什么这么熟练啊</p>
</blockquote>
<p>有的人的教程里面会解释很多具体步骤，我在这里都省略了，主要原因是<code>这些工具、网页仍处于保持更新阶段。而你现在所看到的这个页面就是它出生时的样子，无特殊情况不会进行太多修改。</code>如果使用图文说明，在多次更新后甚至会适得其反。庆幸的是，Hexo官网（中文支持）和Next主题使用文档的更新可以得到保证（只要原作者还在进行开发），这也是为什么我强烈建议读者详细阅读说明文档的原因。</p>
<blockquote>
<p>如果你仔细地阅读过了说明文档，应该能独立完成以下要求：<br>1.为你的博客设置作者昵称、头像和站点描述等；<br>2.设置修改菜单栏和侧边栏的功能；<br>3.设置文章的标签、分类、字体和代码高亮等；<br>4.侧边栏添加社交链接，自定义图片样式<br>5.（一些第三方服务）</p>
</blockquote>
<p><br></p>
<h2 id="绑定域名"><a href="#绑定域名" class="headerlink" title="绑定域名"></a>绑定域名</h2><p>如果你购买了一个域名，你需要在<code>hexo的sources</code>目录下新建一个CNAME文件，内容就是你购买的域名地址（不需要任何的额外内容）。<br>在域名解析（域名提供商）中添加设置三项：</p>
<blockquote>
<p>记录类型A 主机记录@ 记录值192.30.252.153<br>记录类型A 主机记录@ 记录值192.30.252.154<br>记录类型CNAME 主机记录www 记录值 用户名.github.io.</p>
</blockquote>
<p>过一段时间访问你购买的域名即可。<br>Markdown语法</p>
<p>点击查看<a href="http://www.appinn.com/markdown/" target="_blank" rel="external">Markdown 语法说明(简体中文版)</a><br>下载<a href="http://markdownpad.com/" target="_blank" rel="external">MarkdownPad2 激活Pro版本</a>：</p>
<blockquote>
<p>邮箱： Soar360@live.com<br>授权秘钥： 根据邮箱提示关键词自行获取</p>
</blockquote>
<p><br></p>
<h2 id="七牛云图床"><a href="#七牛云图床" class="headerlink" title="七牛云图床"></a>七牛云图床</h2><p>注册<a href="https://www.qiniu.com/" target="_blank" rel="external">七牛云</a>和<a href="http://jiantuku.com/#/" target="_blank" rel="external">极简图床</a>，傻瓜式操作，解决图片储存问题。</p>
<p><br></p>
<h2 id="参考博客"><a href="#参考博客" class="headerlink" title="参考博客"></a>参考博客</h2><p>Doge - <a href="http://acdoge.com/github-hexo.html" target="_blank" rel="external">小fa的奇思幻想</a><br>Processor - <a href="http://processor.pub/2016/10/07/Windows%E4%B8%8B%E5%88%A9%E7%94%A8Hexo%E6%90%AD%E5%BB%BA%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/" target="_blank" rel="external">Windows下利用Hexo搭建静态博客</a><br>LoRexxar - <a href="http://lorexxar.cn/2015/05/22/Hexo-blogs/" target="_blank" rel="external">Windows Hexo博客安装配置优化（小白篇）</a><br>向以上博主表示衷心的感谢，侵删。</p>
]]></content>
      
        
        <tags>
            
            <tag> 教程 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[找图片啊图标啊什么的]]></title>
      <url>https://b0lv42.github.io/2017/04/02/%E6%89%BE%E5%9B%BE%E7%89%87%E5%95%8A%E5%9B%BE%E6%A0%87%E5%95%8A%E4%BB%80%E4%B9%88%E7%9A%84/</url>
      <content type="html"><![CDATA[<h1 id="图片："><a href="#图片：" class="headerlink" title="图片："></a>图片：</h1><p><a href="http://zerospace.asika.tw/" target="_blank" rel="external">http://zerospace.asika.tw/</a><br>pixabay.com<br><a href="https://alpha.wallhaven.cc/" target="_blank" rel="external">https://alpha.wallhaven.cc/</a></p>
<h1 id="Logo："><a href="#Logo：" class="headerlink" title="Logo："></a>Logo：</h1><p><a href="http://instantlogosearch.com/" target="_blank" rel="external">http://instantlogosearch.com/</a></p>
<h1 id="图标："><a href="#图标：" class="headerlink" title="图标："></a>图标：</h1><p><a href="http://www.iconfont.cn/" target="_blank" rel="external">http://www.iconfont.cn/</a></p>
<hr>
<p><a href="http://www.doyoudo.com/resources" target="_blank" rel="external">http://www.doyoudo.com/resources</a><br><a href="http://hao.uisdc.com/" target="_blank" rel="external">http://hao.uisdc.com/</a></p>
]]></content>
      
        
        <tags>
            
            <tag> 收集的乱七八糟的东西！ </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[汇编语言入门qwq]]></title>
      <url>https://b0lv42.github.io/2017/03/28/%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80%E5%85%A5%E9%97%A8/</url>
      <content type="html"><![CDATA[<p>qwq</p>
<h3 id="汇编语言入门一：环境准备"><a href="#汇编语言入门一：环境准备" class="headerlink" title="汇编语言入门一：环境准备"></a><a href="https://zhuanlan.zhihu.com/p/23618489" target="_blank" rel="external">汇编语言入门一：环境准备</a></h3><h3 id="汇编语言入门二：环境有了先过把瘾"><a href="#汇编语言入门二：环境有了先过把瘾" class="headerlink" title="汇编语言入门二：环境有了先过把瘾"></a><a href="https://zhuanlan.zhihu.com/p/23639191" target="_blank" rel="external">汇编语言入门二：环境有了先过把瘾</a></h3><h3 id="汇编语言入门三：是时候上内存了"><a href="#汇编语言入门三：是时候上内存了" class="headerlink" title="汇编语言入门三：是时候上内存了"></a><a href="https://zhuanlan.zhihu.com/p/23722940" target="_blank" rel="external">汇编语言入门三：是时候上内存了</a></h3><h3 id="汇编语言入门四：打通C和汇编语言"><a href="#汇编语言入门四：打通C和汇编语言" class="headerlink" title="汇编语言入门四：打通C和汇编语言"></a><a href="https://zhuanlan.zhihu.com/p/23779935" target="_blank" rel="external">汇编语言入门四：打通C和汇编语言</a></h3><h3 id="汇编语言入门五：流程控制（一）"><a href="#汇编语言入门五：流程控制（一）" class="headerlink" title="汇编语言入门五：流程控制（一）"></a><a href="https://zhuanlan.zhihu.com/p/23845369" target="_blank" rel="external">汇编语言入门五：流程控制（一）</a></h3><h3 id="汇编语言入门六：流程控制（二）"><a href="#汇编语言入门六：流程控制（二）" class="headerlink" title="汇编语言入门六：流程控制（二）"></a><a href="https://zhuanlan.zhihu.com/p/23902265" target="_blank" rel="external">汇编语言入门六：流程控制（二）</a></h3><h3 id="汇编语言入门七：函数调用（一）"><a href="#汇编语言入门七：函数调用（一）" class="headerlink" title="汇编语言入门七：函数调用（一）"></a><a href="https://zhuanlan.zhihu.com/p/24129384" target="_blank" rel="external">汇编语言入门七：函数调用（一）</a></h3><h3 id="汇编语言入门八：函数调用（二）"><a href="#汇编语言入门八：函数调用（二）" class="headerlink" title="汇编语言入门八：函数调用（二）"></a><a href="https://zhuanlan.zhihu.com/p/24265088" target="_blank" rel="external">汇编语言入门八：函数调用（二）</a></h3><h3 id="汇编语言入门九：总结与后续（闲扯）"><a href="#汇编语言入门九：总结与后续（闲扯）" class="headerlink" title="汇编语言入门九：总结与后续（闲扯）"></a><a href="https://zhuanlan.zhihu.com/p/24424432" target="_blank" rel="external">汇编语言入门九：总结与后续（闲扯）</a></h3>]]></content>
      
        
        <tags>
            
            <tag> 资料 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[HDOJ 2500 【简单题】做一个正气的杭电人]]></title>
      <url>https://b0lv42.github.io/2017/03/11/HDOJ%202500%20%E3%80%90%E7%AE%80%E5%8D%95%E9%A2%98%E3%80%91%E5%81%9A%E4%B8%80%E4%B8%AA%E6%AD%A3%E6%B0%94%E7%9A%84%E6%9D%AD%E7%94%B5%E4%BA%BA/</url>
      <content type="html"><![CDATA[<p>###【题目描述】<br><a href="http://acm.hdu.edu.cn/showproblem.php?pid=2500" target="_blank" rel="external">http://acm.hdu.edu.cn/showproblem.php?pid=2500</a></p>
<p>###【思路】<br>超简单 就不写辣！</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">      <span class="keyword">int</span> T,n;</div><div class="line"></div><div class="line">      <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;T);</div><div class="line"></div><div class="line">      <span class="keyword">while</span> (T--)</div><div class="line">      &#123;</div><div class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</div><div class="line"></div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n*<span class="number">3</span>;i++)</div><div class="line">            &#123;</div><div class="line">                  <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++) <span class="built_in">printf</span>(<span class="string">"HDU"</span>);</div><div class="line">                  <span class="built_in">printf</span>(<span class="string">"\n"</span>);</div><div class="line">            &#125;</div><div class="line">      &#125;</div><div class="line"></div><div class="line">      <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> ACM题解 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[HDOJ 3790 【Dijkstra】最短路径问题]]></title>
      <url>https://b0lv42.github.io/2017/03/11/HDOJ%203790%20%E3%80%90Dijkstra%E3%80%91%E6%9C%80%E7%9F%AD%E8%B7%AF%E5%BE%84%E9%97%AE%E9%A2%98/</url>
      <content type="html"><![CDATA[<h3 id="【题目描述】"><a href="#【题目描述】" class="headerlink" title="【题目描述】"></a>【题目描述】</h3><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=3790" target="_blank" rel="external">http://acm.hdu.edu.cn/showproblem.php?pid=3790</a></p>
<h3 id="【思路】"><a href="#【思路】" class="headerlink" title="【思路】"></a>【思路】</h3><p>松弛操作每更新一条边，不管被更新的点的cost值是否最小都要被更新，这里wa了3发…..<br>当被更新的点的dis值相等时再检查cost的值是否最小。<br><br><br><br></p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> Max=<span class="number">2100000</span>;</div><div class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; Pair;</div><div class="line">priority_queue&lt;Pair,<span class="built_in">vector</span>&lt;Pair&gt;,greater&lt;Pair&gt; &gt; Q;</div><div class="line"></div><div class="line"><span class="keyword">int</span> n,S,T,tail,dis[<span class="number">1100</span>],head[<span class="number">1100</span>],cost[<span class="number">1100</span>];</div><div class="line"></div><div class="line"><span class="keyword">struct</span> data</div><div class="line">&#123;</div><div class="line">      <span class="keyword">int</span> c,w,to,next;</div><div class="line">&#125;k,edge[<span class="number">210000</span>];</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v,<span class="keyword">int</span> d,<span class="keyword">int</span> p)</span></span></div><div class="line">&#123;</div><div class="line">      edge[tail].w=d;</div><div class="line">      edge[tail].to=v;</div><div class="line">      edge[tail].c=p;</div><div class="line">      edge[tail].next=head[u];</div><div class="line">      head[u]=tail++;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">Dij</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">      Pair s,u;</div><div class="line">      <span class="keyword">int</span> v,val;</div><div class="line"></div><div class="line">      dis[S]=<span class="number">0</span>;</div><div class="line">      cost[S]=<span class="number">0</span>;</div><div class="line">      s.first=<span class="number">0</span>;</div><div class="line">      s.second=S;</div><div class="line">      Q.push(s);</div><div class="line"></div><div class="line">      <span class="keyword">while</span> (!Q.empty())</div><div class="line">      &#123;</div><div class="line">            u=Q.top();</div><div class="line">            Q.pop();</div><div class="line">            v=u.second;</div><div class="line">            val=u.first;</div><div class="line">            <span class="keyword">if</span> (dis[v]&lt;val) <span class="keyword">continue</span>;</div><div class="line"></div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i=head[v];i!=<span class="number">-1</span>;i=edge[i].next)</div><div class="line">            &#123;</div><div class="line">                  k=edge[i];</div><div class="line">                  <span class="keyword">if</span> (dis[k.to]&gt;dis[v]+k.w)</div><div class="line">                  &#123;</div><div class="line">                        dis[k.to]=dis[v]+k.w;</div><div class="line">                        Q.push(Pair(dis[k.to],k.to));</div><div class="line">                        cost[k.to]=cost[v]+k.c;</div><div class="line">                  &#125;</div><div class="line">                  <span class="keyword">else</span> <span class="keyword">if</span> (dis[k.to]==dis[v]+k.w)</div><div class="line">                        cost[k.to]=min(cost[k.to],cost[v]+k.c);</div><div class="line">            &#125;</div><div class="line">      &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">      <span class="keyword">int</span> n,m,u,v,d,p;</div><div class="line"></div><div class="line">      <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m)!=EOF)</div><div class="line">      &#123;</div><div class="line">            <span class="keyword">if</span> (!n &amp;&amp; !m) <span class="keyword">break</span>;</div><div class="line"></div><div class="line">            tail=<span class="number">0</span>;</div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">1100</span>;i++) head[i]=<span class="number">-1</span>;</div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">1100</span>;i++) dis[i]=Max;</div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">1100</span>;i++) cost[i]=Max;</div><div class="line"></div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</div><div class="line">            &#123;</div><div class="line">                  <span class="built_in">scanf</span>(<span class="string">"%d%d%d%d"</span>,&amp;u,&amp;v,&amp;d,&amp;p);</div><div class="line">                  build(u,v,d,p);</div><div class="line">                  build(v,u,d,p);</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;S,&amp;T);</div><div class="line"></div><div class="line">            Dij();</div><div class="line">            <span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>,dis[T],cost[T]);</div><div class="line">      &#125;</div><div class="line"></div><div class="line">      <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> ACM题解 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[HDOJ 2544 【Dijkstra】最短路]]></title>
      <url>https://b0lv42.github.io/2017/03/11/HDOJ%202544%20%E3%80%90Dijkstra%E3%80%91%E6%9C%80%E7%9F%AD%E8%B7%AF/</url>
      <content type="html"><![CDATA[<h3 id="【题目描述】"><a href="#【题目描述】" class="headerlink" title="【题目描述】"></a>【题目描述】</h3><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=2544" target="_blank" rel="external">http://acm.hdu.edu.cn/showproblem.php?pid=2544</a><br><br><br><br></p>
<h3 id="【思路】"><a href="#【思路】" class="headerlink" title="【思路】"></a>【思路】</h3><p>啊就是最短路裸题…Dijkstra+heap<br><br><br><br><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> Max=<span class="number">2100000</span>;</div><div class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; Pair;</div><div class="line">priority_queue&lt;Pair,<span class="built_in">vector</span>&lt;Pair&gt;,greater&lt;Pair&gt; &gt; Q;</div><div class="line"></div><div class="line"><span class="keyword">int</span> n,tail,dis[<span class="number">200</span>],head[<span class="number">200</span>];</div><div class="line"></div><div class="line"><span class="keyword">struct</span> data</div><div class="line">&#123;</div><div class="line">      <span class="keyword">int</span> w,to,next;</div><div class="line">&#125;k,edge[<span class="number">21000</span>];</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v,<span class="keyword">int</span> x)</span></span></div><div class="line">&#123;</div><div class="line">      edge[tail].w=x;</div><div class="line">      edge[tail].to=v;</div><div class="line">      edge[tail].next=head[u];</div><div class="line">      head[u]=tail++;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">Dij</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">      Pair s,u;</div><div class="line">      <span class="keyword">int</span> v,val;</div><div class="line"></div><div class="line">      dis[<span class="number">1</span>]=<span class="number">0</span>;</div><div class="line">      s.first=<span class="number">0</span>;</div><div class="line">      s.second=<span class="number">1</span>;</div><div class="line">      Q.push(s);</div><div class="line"></div><div class="line">      <span class="keyword">while</span> (!Q.empty())</div><div class="line">      &#123;</div><div class="line">            u=Q.top();</div><div class="line">            Q.pop();</div><div class="line">            v=u.second;</div><div class="line">            val=u.first;</div><div class="line">            <span class="keyword">if</span> (dis[v]&lt;val) <span class="keyword">continue</span>;</div><div class="line"></div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i=head[v];i!=<span class="number">-1</span>;i=edge[i].next)</div><div class="line">            &#123;</div><div class="line">                  k=edge[i];</div><div class="line">                  <span class="keyword">if</span> (dis[k.to]&gt;dis[v]+k.w)</div><div class="line">                  &#123;</div><div class="line">                        dis[k.to]=dis[v]+k.w;</div><div class="line">                        Q.push(Pair(dis[k.to],k.to));</div><div class="line">                  &#125;</div><div class="line">            &#125;</div><div class="line">      &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">      <span class="keyword">int</span> n,m,u,v,x;</div><div class="line"></div><div class="line">      <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m)!=EOF)</div><div class="line">      &#123;</div><div class="line">            <span class="keyword">if</span> (!n &amp;&amp; !m) <span class="keyword">break</span>;</div><div class="line"></div><div class="line">            tail=<span class="number">0</span>;</div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">200</span>;i++) head[i]=<span class="number">-1</span>;</div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">200</span>;i++) dis[i]=Max;</div><div class="line"></div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</div><div class="line">            &#123;</div><div class="line">                  <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;u,&amp;v,&amp;x);</div><div class="line">                  build(u,v,x);</div><div class="line">                  build(v,u,x);</div><div class="line">            &#125;</div><div class="line">            Dij();</div><div class="line">            <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,dis[n]);</div><div class="line">      &#125;</div><div class="line"></div><div class="line">      <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
      
        
        <tags>
            
            <tag> ACM题解 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[HDOJ 2066 【Dijkstra】一个人的旅行]]></title>
      <url>https://b0lv42.github.io/2017/03/10/HDOJ%202066%20%E3%80%90Dijkstra%E3%80%91%E4%B8%80%E4%B8%AA%E4%BA%BA%E7%9A%84%E6%97%85%E8%A1%8C/</url>
      <content type="html"><![CDATA[<h3 id="【题目描述】"><a href="#【题目描述】" class="headerlink" title="【题目描述】"></a>【题目描述】</h3><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=2066" target="_blank" rel="external">http://acm.hdu.edu.cn/showproblem.php?pid=2066</a></p>
<h3 id="【思路】"><a href="#【思路】" class="headerlink" title="【思路】"></a>【思路】</h3><p>看起来是多源多终点的最短路问题，每个起点和每个终点都枚举的话，复杂度会很高，所以我自己建一个点，编号是0，在它与所有的起点之间建一条费用为0的双向边，再建一个点，编号是2000（远大于数据范围），在它和所有的终点之间建0费用边。<br>然后问题就很好解决了，单源最短路嘿！<em>(:з」∠)</em></p>
<h3 id="Dijkstra-heap-前向星："><a href="#Dijkstra-heap-前向星：" class="headerlink" title="Dijkstra+heap+前向星："></a>Dijkstra+heap+前向星：</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> Max=<span class="number">21000000</span>;</div><div class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; Pair;</div><div class="line">priority_queue&lt; Pair, <span class="built_in">vector</span>&lt;Pair&gt;, greater&lt;Pair&gt; &gt; Q;</div><div class="line"></div><div class="line"><span class="keyword">int</span> dis[<span class="number">2100</span>],head[<span class="number">2100</span>];</div><div class="line"><span class="keyword">int</span> tail;</div><div class="line"></div><div class="line"><span class="keyword">struct</span> data</div><div class="line">&#123;</div><div class="line">      <span class="keyword">int</span> w,to,next;</div><div class="line">&#125;edge[<span class="number">201000</span>],k;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b,<span class="keyword">int</span> x)</span></span></div><div class="line">&#123;</div><div class="line">      edge[tail].w=x;</div><div class="line">      edge[tail].to=b;</div><div class="line">      edge[tail].next=head[a];</div><div class="line">      head[a]=tail++;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">Dijkstra</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">      Pair s,u;</div><div class="line">      <span class="keyword">int</span> v,val;</div><div class="line"></div><div class="line">      dis[<span class="number">0</span>]=<span class="number">0</span>;</div><div class="line">      s.first=<span class="number">0</span>;</div><div class="line">      s.second=<span class="number">0</span>;</div><div class="line">      Q.push(s);</div><div class="line"></div><div class="line">      <span class="keyword">while</span> (!Q.empty())</div><div class="line">      &#123;</div><div class="line">            u=Q.top();</div><div class="line">            Q.pop();</div><div class="line">            val=u.first;</div><div class="line">            v=u.second;</div><div class="line">            <span class="keyword">if</span> (dis[v]&lt;val) <span class="keyword">continue</span>;</div><div class="line"></div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i=head[v]; i!=<span class="number">-1</span>; i=edge[i].next)</div><div class="line">            &#123;</div><div class="line">                  k=edge[i];</div><div class="line">                  <span class="keyword">if</span> (dis[k.to]&gt;dis[v]+k.w)</div><div class="line">                  &#123;</div><div class="line">                        dis[k.to]=dis[v]+k.w;</div><div class="line">                        Q.push(Pair(dis[k.to],k.to));</div><div class="line">                  &#125;</div><div class="line">            &#125;</div><div class="line">      &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">      <span class="keyword">int</span> T,S,D,a,b,x;</div><div class="line"></div><div class="line">      <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;T,&amp;S,&amp;D)!=EOF)</div><div class="line">      &#123;</div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">2100</span>;i++) head[i]=<span class="number">-1</span>;</div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">2100</span>;i++) dis[i]=Max;</div><div class="line">            tail=<span class="number">0</span>;</div><div class="line"></div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=T;i++)</div><div class="line">            &#123;</div><div class="line">                  <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;a,&amp;b,&amp;x);</div><div class="line">                  build(a,b,x);</div><div class="line">                  build(b,a,x);</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=S;i++)</div><div class="line">            &#123;</div><div class="line">                  <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;x);</div><div class="line">                  build(<span class="number">0</span>,x,<span class="number">0</span>);</div><div class="line">                  build(x,<span class="number">0</span>,<span class="number">0</span>);</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=D;i++)</div><div class="line">            &#123;</div><div class="line">                  <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;x);</div><div class="line">                  build(<span class="number">2000</span>,x,<span class="number">0</span>);</div><div class="line">                  build(x,<span class="number">2000</span>,<span class="number">0</span>);</div><div class="line">            &#125;</div><div class="line">            Dijkstra();</div><div class="line">            <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,dis[<span class="number">2000</span>]);</div><div class="line">      &#125;</div><div class="line"></div><div class="line">      <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> ACM题解 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[HDOJ 1874 【FLoyd】【Bellman】【Dijkstra】畅通工程续]]></title>
      <url>https://b0lv42.github.io/2017/03/09/HDOJ%201874%20%E3%80%90FLoyd%E3%80%91%E3%80%90Bellman%E3%80%91%E7%95%85%E9%80%9A%E5%B7%A5%E7%A8%8B%E7%BB%AD/</url>
      <content type="html"><![CDATA[<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=1874" target="_blank" rel="external">http://acm.hdu.edu.cn/showproblem.php?pid=1874</a><br><br><br><br></p>
<h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>单源单终点求最短路，有很多写法…数据小。<br>P.S.用floyd是有坑的，数据会给出一条起点和终点相同的正边，就会WA。<br><br><br><br></p>
<h2 id="FLoyd"><a href="#FLoyd" class="headerlink" title="FLoyd"></a>FLoyd</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> Max=<span class="number">210000</span>;</div><div class="line"><span class="keyword">int</span> dis[<span class="number">300</span>][<span class="number">300</span>];</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">      <span class="keyword">int</span> n,m,a,b,s,t,x;</div><div class="line"></div><div class="line">      <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m)!=EOF)</div><div class="line">      &#123;</div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=n+<span class="number">1</span>;i++)</div><div class="line">                  <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=n+<span class="number">1</span>;j++)</div><div class="line">                  &#123;</div><div class="line">                        <span class="keyword">if</span> (i==j) dis[i][i]=<span class="number">0</span>;</div><div class="line">                        <span class="keyword">else</span> dis[i][j]=Max;</div><div class="line">                  &#125;</div><div class="line"></div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</div><div class="line">            &#123;</div><div class="line">                  <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;a,&amp;b,&amp;x);</div><div class="line">                  a++;b++;</div><div class="line">                  <span class="keyword">if</span> (dis[a][b]&gt;x) dis[a][b]=dis[b][a]=x;</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;=n;k++)</div><div class="line">                  <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</div><div class="line">                        <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</div><div class="line">                        dis[i][j]=min(dis[i][j],dis[i][k]+dis[k][j]);</div><div class="line"></div><div class="line">            <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;s,&amp;t);</div><div class="line">            <span class="keyword">if</span> (dis[s+<span class="number">1</span>][t+<span class="number">1</span>]==Max) <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,<span class="number">-1</span>);</div><div class="line">            <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,dis[s+<span class="number">1</span>][t+<span class="number">1</span>]);</div><div class="line">      &#125;</div><div class="line"></div><div class="line">      <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><br><br><br><br><br></p>
<h2 id="Bellman-Ford："><a href="#Bellman-Ford：" class="headerlink" title="Bellman_Ford："></a>Bellman_Ford：</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> Max=<span class="number">2100000</span>;</div><div class="line"><span class="keyword">int</span> dis[<span class="number">300</span>];</div><div class="line"></div><div class="line"><span class="keyword">struct</span> data</div><div class="line">&#123;</div><div class="line">      <span class="keyword">int</span> from,to,value;</div><div class="line">&#125;edge[<span class="number">22000</span>];</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">Bellman_Ford</span><span class="params">(<span class="keyword">int</span> n,<span class="keyword">int</span> m,<span class="keyword">int</span> s,<span class="keyword">int</span> t)</span></span></div><div class="line">&#123;</div><div class="line">      <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">300</span>;i++) dis[i]=Max;</div><div class="line">      dis[s]=<span class="number">0</span>;</div><div class="line"></div><div class="line">      <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</div><div class="line">            &#123;</div><div class="line">                  dis[edge[j].to]=min( dis[edge[j].to], dis[edge[j].from] + edge[j].value);</div><div class="line">            &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">      <span class="keyword">int</span> n,m,s,t;</div><div class="line"></div><div class="line">      <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m)!=EOF)</div><div class="line">      &#123;</div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</div><div class="line">            &#123;</div><div class="line">                  <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;edge[i].from,&amp;edge[i].to,&amp;edge[i].value);</div><div class="line">                  edge[i+m].to=edge[i].from;</div><div class="line">                  edge[i+m].from=edge[i].to;</div><div class="line">                  edge[i+m].value=edge[i].value;</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;s,&amp;t);</div><div class="line">            Bellman_Ford(n,m&lt;&lt;<span class="number">1</span>,s,t);</div><div class="line">            <span class="keyword">if</span> (dis[t]==Max) <span class="built_in">printf</span>(<span class="string">"-1\n"</span>);</div><div class="line">            <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,dis[t]);</div><div class="line">      &#125;</div><div class="line"></div><div class="line">      <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="Dijkstra-没优化-邻接矩阵："><a href="#Dijkstra-没优化-邻接矩阵：" class="headerlink" title="Dijkstra 没优化+邻接矩阵："></a>Dijkstra 没优化+邻接矩阵：</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> Max=<span class="number">210000</span>;</div><div class="line"><span class="keyword">int</span> dis[<span class="number">300</span>],vis[<span class="number">300</span>],Map[<span class="number">300</span>][<span class="number">300</span>];</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">dijkstra</span><span class="params">(<span class="keyword">int</span> n,<span class="keyword">int</span> m,<span class="keyword">int</span> s,<span class="keyword">int</span> t)</span></span></div><div class="line">&#123;</div><div class="line">      <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">300</span>;i++) dis[i]=Max;</div><div class="line">      <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">300</span>;i++) vis[i]=<span class="number">0</span>;</div><div class="line">      dis[s]=<span class="number">0</span>;</div><div class="line"></div><div class="line">      <span class="keyword">while</span> (<span class="number">1</span>)</div><div class="line">      &#123;</div><div class="line">            <span class="keyword">int</span> v=<span class="number">-1</span>;</div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</div><div class="line">                  <span class="keyword">if</span> (!vis[i] &amp;&amp; (v==<span class="number">-1</span> || dis[i]&lt;dis[v])) v=i;</div><div class="line">            <span class="keyword">if</span> (v==<span class="number">-1</span>) <span class="keyword">break</span>;</div><div class="line">            vis[v]=<span class="number">1</span>;</div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</div><div class="line">                  dis[i]=min(dis[i],dis[v]+Map[v][i]);</div><div class="line">      &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">      <span class="keyword">int</span> a,b,x,n,m,s,t;</div><div class="line"></div><div class="line">      <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m)!=EOF)</div><div class="line">      &#123;</div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">300</span>;i++)</div><div class="line">                  <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">300</span>;j++)</div><div class="line">                       <span class="keyword">if</span> (i==j) Map[i][j]=<span class="number">0</span>;</div><div class="line">                       <span class="keyword">else</span> Map[i][j]=Max;</div><div class="line"></div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</div><div class="line">            &#123;</div><div class="line">                  <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;a,&amp;b,&amp;x);</div><div class="line">                  <span class="keyword">if</span> (Map[a+<span class="number">1</span>][b+<span class="number">1</span>]&gt;x) Map[a+<span class="number">1</span>][b+<span class="number">1</span>]=Map[b+<span class="number">1</span>][a+<span class="number">1</span>]=x;</div><div class="line">            &#125;</div><div class="line">            <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;s,&amp;t);</div><div class="line">            dijkstra(n,m,s+<span class="number">1</span>,t+<span class="number">1</span>);</div><div class="line">            <span class="keyword">if</span> (dis[t+<span class="number">1</span>]!=Max) <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,dis[t+<span class="number">1</span>]);</div><div class="line">            <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"-1\n"</span>);</div><div class="line">      &#125;</div><div class="line"></div><div class="line">      <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><br><br><br></p>
<h2 id="Dijkstra-heap："><a href="#Dijkstra-heap：" class="headerlink" title="Dijkstra+heap："></a>Dijkstra+heap：</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> Max=<span class="number">21000000</span>;</div><div class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; Pair;</div><div class="line"></div><div class="line"><span class="keyword">int</span> dis[<span class="number">300</span>],head[<span class="number">300</span>];</div><div class="line"><span class="keyword">int</span> S,T,m,n,tail;</div><div class="line">priority_queue&lt; Pair,<span class="built_in">vector</span>&lt;Pair&gt;,greater&lt;Pair&gt; &gt; Q;</div><div class="line"></div><div class="line"><span class="keyword">struct</span> data</div><div class="line">&#123;</div><div class="line">      <span class="keyword">int</span> w,to,next;</div><div class="line">&#125;edge[<span class="number">3000</span>],k;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b,<span class="keyword">int</span> x)</span></span></div><div class="line">&#123;</div><div class="line">      edge[tail].w=x;</div><div class="line">      edge[tail].to=b;</div><div class="line">      edge[tail].next=head[a];</div><div class="line">      head[a]=tail++;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">Dijkstra</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">      Pair s;</div><div class="line">      <span class="keyword">int</span> v,val;</div><div class="line"></div><div class="line">      dis[S]=<span class="number">0</span>;</div><div class="line">      s.first=<span class="number">0</span>;</div><div class="line">      s.second=S;</div><div class="line">      Q.push(s);</div><div class="line"></div><div class="line">      <span class="keyword">while</span> (!Q.empty())</div><div class="line">      &#123;</div><div class="line">            Pair u=Q.top();</div><div class="line">            Q.pop();</div><div class="line">            val=u.first;</div><div class="line">            v=u.second;</div><div class="line">            <span class="keyword">if</span> (dis[v]&lt;val) <span class="keyword">continue</span>;</div><div class="line"></div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i=head[v]; i!=<span class="number">-1</span>; i=edge[i].next)</div><div class="line">            &#123;</div><div class="line">                  k=edge[i];</div><div class="line">                  <span class="keyword">if</span> (dis[k.to]&gt;dis[v]+k.w)</div><div class="line">                  &#123;</div><div class="line">                        dis[k.to]=dis[v]+k.w;</div><div class="line">                        Q.push(Pair(dis[k.to],k.to));</div><div class="line">                  &#125;</div><div class="line">            &#125;</div><div class="line">      &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">      <span class="keyword">int</span> a,b,x;</div><div class="line"></div><div class="line">      <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m)!=EOF)</div><div class="line">      &#123;</div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">300</span>;i++) dis[i]=Max;</div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">300</span>;i++) head[i]=<span class="number">-1</span>;</div><div class="line">            tail=<span class="number">0</span>;</div><div class="line"></div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</div><div class="line">            &#123;</div><div class="line">                  <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;a,&amp;b,&amp;x);</div><div class="line">                  build(a,b,x);</div><div class="line">                  build(b,a,x);</div><div class="line">            &#125;</div><div class="line">            <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;S,&amp;T);</div><div class="line">            Dijkstra();</div><div class="line">            <span class="keyword">if</span> (dis[T]!=Max) <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,dis[T]);</div><div class="line">            <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"-1\n"</span>);</div><div class="line">      &#125;</div><div class="line"></div><div class="line">      <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
      
        
        <tags>
            
            <tag> ACM题解 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[HDOJ 1215 【简单题】七夕节  &  HDOJ 1406 【简单题】完数]]></title>
      <url>https://b0lv42.github.io/2017/03/08/HDOJ%201215%20%E3%80%90%E7%AE%80%E5%8D%95%E9%A2%98%E3%80%91%E4%B8%83%E5%A4%95%E8%8A%82%20%20&amp;%20%20HDOJ%201406%20%E3%80%90%E7%AE%80%E5%8D%95%E9%A2%98%E3%80%91%E5%AE%8C%E6%95%B0/</url>
      <content type="html"><![CDATA[<p>【题目描述】<br>P1215：<br><a href="http://acm.hdu.edu.cn/showproblem.php?pid=1215" target="_blank" rel="external">http://acm.hdu.edu.cn/showproblem.php?pid=1215</a><br>P1406：<br><a href="http://acm.hdu.edu.cn/showproblem.php?pid=1406" target="_blank" rel="external">http://acm.hdu.edu.cn/showproblem.php?pid=1406</a></p>
<p>【思路】<br>这2个题差不多的，找完数。纯枚举..<br>P.S.1406有坑，sum1可能会大于sum2，要提前判断一下。</p>
<p>1215：</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">      <span class="keyword">int</span> T,n,x;</div><div class="line">      <span class="keyword">long</span> <span class="keyword">long</span> sum;</div><div class="line"></div><div class="line">      <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;T);</div><div class="line"></div><div class="line">      <span class="keyword">while</span> (T--)</div><div class="line">      &#123;</div><div class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</div><div class="line">            sum=<span class="number">0</span>;</div><div class="line">            x=<span class="built_in">floor</span>(<span class="built_in">sqrt</span>(n)+<span class="number">0.5</span>);</div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=x;i++)</div><div class="line">                  <span class="keyword">if</span> (n%i==<span class="number">0</span>)</div><div class="line">                  &#123;</div><div class="line">                        sum+=i;</div><div class="line">                        <span class="keyword">if</span> (n/i&lt;n &amp;&amp; n/i&gt;i) sum+=n/i;</div><div class="line">                  &#125;</div><div class="line">            <span class="built_in">printf</span>(<span class="string">"%I64d\n"</span>,sum);</div><div class="line">      &#125;</div><div class="line"></div><div class="line">      <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>1406：</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">int</span> f[<span class="number">11000</span>];</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">      <span class="keyword">int</span> T,a,b,n,x;</div><div class="line">      <span class="keyword">long</span> <span class="keyword">long</span> sum;</div><div class="line"></div><div class="line">      f[<span class="number">0</span>]=<span class="number">0</span>;f[<span class="number">1</span>]=<span class="number">0</span>;</div><div class="line">      <span class="keyword">for</span> (<span class="keyword">int</span> n=<span class="number">2</span>;n&lt;<span class="number">11000</span>;n++)</div><div class="line">      &#123;</div><div class="line">            sum=<span class="number">0</span>;</div><div class="line">            x=<span class="built_in">floor</span>(<span class="built_in">sqrt</span>(n)+<span class="number">0.5</span>);</div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=x;i++)</div><div class="line">                  <span class="keyword">if</span> (n%i==<span class="number">0</span>)</div><div class="line">                  &#123;</div><div class="line">                        sum+=i;</div><div class="line">                        <span class="keyword">if</span> (n/i&lt;n &amp;&amp; n/i&gt;i) sum+=n/i;</div><div class="line">                  &#125;</div><div class="line">            <span class="keyword">if</span> (sum==n) f[n]=f[n<span class="number">-1</span>]+<span class="number">1</span>;</div><div class="line">            <span class="keyword">else</span> f[n]=f[n<span class="number">-1</span>];</div><div class="line">      &#125;</div><div class="line"></div><div class="line">      <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;T);</div><div class="line">      <span class="keyword">while</span> (T--)</div><div class="line">      &#123;</div><div class="line">            <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;a,&amp;b);</div><div class="line">            <span class="keyword">if</span> (a&gt;b) swap(a,b);</div><div class="line">            <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,f[b]-f[a<span class="number">-1</span>]);</div><div class="line">      &#125;</div><div class="line"></div><div class="line">      <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> ACM题解 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[HDOJ 1217 【Floyd】Arbitrage]]></title>
      <url>https://b0lv42.github.io/2017/03/06/HDOJ%201217%20%E3%80%90Floyd%E3%80%91Arbitrage/</url>
      <content type="html"><![CDATA[<h3 id="【题目描述】"><a href="#【题目描述】" class="headerlink" title="【题目描述】"></a>【题目描述】</h3><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=1217" target="_blank" rel="external">http://acm.hdu.edu.cn/showproblem.php?pid=1217</a><br><br></p>
<p>###【思路】<br>就是求最长路，因为起点和终点无数并且数据很小，所以用floyd也可以。<br>因为是倍数关系，所以当两个点不通时，边值就初始化为0，因为任何数乘以0都等于0嘛。<br>松弛操作完毕后，点i到自身的值即<code>dis[i][i]</code>若是大于1，就说明可以盈利啦。</p>
<p>P.S.1：此题为单向边，我之前建成了双向的orz<br>P.S.2：原来cin是不会读入回车和空格的，但是会吃掉它。就是说不用像scanf那样读入一个int的m后还得用getchar()吃掉一个回车符号，这里我调了半天才发现，果然还是语言基础太差啊，老是错在细节上面。<br><br></p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="built_in">string</span> Name[<span class="number">100</span>];</div><div class="line"><span class="keyword">double</span> dis[<span class="number">110</span>][<span class="number">110</span>];</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">      <span class="keyword">int</span> n,m,x,y,Case,flag;</div><div class="line">      <span class="keyword">double</span> num;</div><div class="line">      <span class="keyword">char</span> ch;</div><div class="line">      <span class="built_in">string</span> s1,s2;</div><div class="line"></div><div class="line">      Case=<span class="number">0</span>;</div><div class="line">      <span class="keyword">while</span> (<span class="built_in">cin</span>&gt;&gt;n &amp;&amp; n)</div><div class="line">      &#123;</div><div class="line">            Case++;</div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="built_in">cin</span>&gt;&gt;Name[i];</div><div class="line"></div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</div><div class="line">                  <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++) dis[i][j]=<span class="number">0</span>;</div><div class="line"></div><div class="line">            <span class="built_in">cin</span>&gt;&gt;m;;</div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</div><div class="line">            &#123;</div><div class="line">                  x=y=<span class="number">0</span>;</div><div class="line">                  <span class="built_in">cin</span>&gt;&gt;s1&gt;&gt;num&gt;&gt;s2;</div><div class="line">                  <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</div><div class="line">                  &#123;</div><div class="line">                        <span class="keyword">if</span> (Name[j]==s1) x=j;</div><div class="line">                        <span class="keyword">if</span> (Name[j]==s2) y=j;</div><div class="line">                        <span class="keyword">if</span> (x &amp;&amp; y) <span class="keyword">break</span>;</div><div class="line">                  &#125;</div><div class="line">                  dis[x][y]=num;</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;=n;k++)</div><div class="line">                  <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</div><div class="line">                        <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</div><div class="line">                        &#123;</div><div class="line">                              dis[i][j]=max(dis[i][j],dis[i][k]*dis[k][j]);</div><div class="line">                        &#125;</div><div class="line"></div><div class="line">            flag=<span class="number">0</span>;</div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</div><div class="line">                  <span class="keyword">if</span> (dis[i][i]&gt;<span class="number">1</span>)</div><div class="line">                  &#123;</div><div class="line">                        flag=<span class="number">1</span>;</div><div class="line">                        <span class="keyword">break</span>;</div><div class="line">                  &#125;</div><div class="line"></div><div class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"Case "</span>&lt;&lt;Case&lt;&lt;<span class="string">": "</span>;</div><div class="line">            <span class="keyword">if</span> (flag) <span class="built_in">cout</span>&lt;&lt;<span class="string">"Yes"</span>&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">            <span class="keyword">else</span> <span class="built_in">cout</span>&lt;&lt;<span class="string">"No"</span>&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">      &#125;</div><div class="line"></div><div class="line">      <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> ACM题解 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[HDOJ 1869 【Floyd】六度分离]]></title>
      <url>https://b0lv42.github.io/2017/03/05/HDOJ%201869%20%E3%80%90Floyd%E3%80%91%E5%85%AD%E5%BA%A6%E5%88%86%E7%A6%BB/</url>
      <content type="html"><![CDATA[<h3 id="【题目描述】"><a href="#【题目描述】" class="headerlink" title="【题目描述】"></a>【题目描述】</h3><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=1869" target="_blank" rel="external">http://acm.hdu.edu.cn/showproblem.php?pid=1869</a><br><br><br><br></p>
<p>###【思路】<br>因为是任意起点和任意的中点而且数据也很小，所以用floyd比较合适。</p>
<p>PS1：题目有坑，编号是从0到n-1的，我习惯用1到n编号<br>PS2：在<code>dis[i][j]=min(dis[i][j],dis[i][k]+dis[k][j])</code>松弛操作这里如果给dis数组赋的初值太大，会炸，比如我之前赋的21亿，操作时21亿+21亿，就炸了，WA了一发。<br><br></p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">int</span> dis[<span class="number">300</span>][<span class="number">300</span>];</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">      <span class="keyword">int</span> n,m,a,b,check;</div><div class="line"></div><div class="line">      <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m)!=EOF)</div><div class="line">      &#123;</div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">250</span>;i++)</div><div class="line">                  <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">250</span>;j++)</div><div class="line">                        <span class="keyword">if</span> (i==j) dis[i][j]==<span class="number">0</span>;</div><div class="line">                        <span class="keyword">else</span> dis[i][j]=<span class="number">210000000</span>;</div><div class="line"></div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</div><div class="line">            &#123;</div><div class="line">                  <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;a,&amp;b);</div><div class="line">                  dis[a+<span class="number">1</span>][b+<span class="number">1</span>]=dis[b+<span class="number">1</span>][a+<span class="number">1</span>]=<span class="number">1</span>;</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;=n;k++)</div><div class="line">                  <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</div><div class="line">                        <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</div><div class="line">                              dis[i][j]=min(dis[i][j],dis[i][k]+dis[k][j]);              <span class="comment">//floyd</span></div><div class="line"></div><div class="line">            check=<span class="number">0</span>;</div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</div><div class="line">            &#123;</div><div class="line">                  <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</div><div class="line">                        <span class="keyword">if</span> (dis[i][j]&gt;<span class="number">7</span>)</div><div class="line">                        &#123;</div><div class="line">                              check=<span class="number">1</span>;</div><div class="line">                              <span class="keyword">break</span>;</div><div class="line">                        &#125;</div><div class="line">                  <span class="keyword">if</span> (check==<span class="number">1</span>) <span class="keyword">break</span>;</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            <span class="keyword">if</span> (check==<span class="number">1</span>) <span class="built_in">printf</span> (<span class="string">"No\n"</span>);</div><div class="line">            <span class="keyword">else</span> <span class="built_in">printf</span> (<span class="string">"Yes\n"</span>);</div><div class="line">      &#125;</div><div class="line"></div><div class="line">      <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> ACM题解 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[HDOJ 1290 【递推】献给杭电五十周年校庆的礼物]]></title>
      <url>https://b0lv42.github.io/2017/03/04/HDOJ%201290%20%E3%80%90%E9%80%92%E6%8E%A8%E3%80%91%E7%8C%AE%E7%BB%99%E6%9D%AD%E7%94%B5%E4%BA%94%E5%8D%81%E5%91%A8%E5%B9%B4%E6%A0%A1%E5%BA%86%E7%9A%84%E7%A4%BC%E7%89%A9/</url>
      <content type="html"><![CDATA[<h3 id="【题目描述】"><a href="#【题目描述】" class="headerlink" title="【题目描述】"></a>【题目描述】</h3><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=1290" target="_blank" rel="external">http://acm.hdu.edu.cn/showproblem.php?pid=1290</a><br><br></p>
<p>###【思路】<br>和直线切割平面是一个道理，要想得到最多的平面，第i条直线就得与前i-1条直线相交，此时它自己被分割成i段，每段都把它所在的平面切成2块，所以对于平面，f[i]=f[i-1]+i;<br>平面切割空间时，第i个平面必须要与前i-1个平面全部相交，即自己被i-1条直线切割成f[i-1]个平面，每个平面把它所在的空间切成2块，所以对于空间，zone[i]=zone[i-1]+f[i-1]。<br>P.S.输出需要用long long。<br><br></p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="keyword">long</span> <span class="keyword">long</span> f[<span class="number">1100</span>],zone[<span class="number">1100</span>];</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">      <span class="keyword">int</span> n;</div><div class="line"></div><div class="line">      f[<span class="number">1</span>]=<span class="number">2</span>;</div><div class="line">      f[<span class="number">2</span>]=<span class="number">4</span>;</div><div class="line">      zone[<span class="number">1</span>]=<span class="number">2</span>;</div><div class="line">      zone[<span class="number">2</span>]=<span class="number">4</span>;</div><div class="line"></div><div class="line">      <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">3</span>;i&lt;<span class="number">1100</span>;i++)</div><div class="line">      &#123;</div><div class="line">            f[i]=f[i<span class="number">-1</span>]+i;</div><div class="line">            zone[i]=zone[i<span class="number">-1</span>]+f[i<span class="number">-1</span>];</div><div class="line">      &#125;</div><div class="line"></div><div class="line">      <span class="keyword">while</span> (~<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n))</div><div class="line">            <span class="built_in">printf</span>(<span class="string">"%I64d\n"</span>,zone[n]);</div><div class="line"></div><div class="line">      <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> ACM题解 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[HDOJ 1051 【贪心】 Wooden Sticks]]></title>
      <url>https://b0lv42.github.io/2017/03/03/HDOJ%201051%20%E3%80%90%E8%B4%AA%E5%BF%83%E3%80%91%20Wooden%20Sticks/</url>
      <content type="html"><![CDATA[<h3 id="【题目描述】"><a href="#【题目描述】" class="headerlink" title="【题目描述】"></a>【题目描述】</h3><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=1051" target="_blank" rel="external">http://acm.hdu.edu.cn/showproblem.php?pid=1051</a><br><br><br><br></p>
<h3 id="【思路】"><a href="#【思路】" class="headerlink" title="【思路】"></a>【思路】</h3><p>就是一个简单的贪心，我还以为是LIS….<br>思路就是对于每一根木棍，如果它没有使用过的话，如果L和W都&gt;=当前，就用它更新当前，并标记使用过。如果不满足&gt;=，就把它加入队列，作为新的开头。每次都是取出队列头，如此循环，直到所有的木棍全部被切割完成。</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">int</span> Use[<span class="number">11000</span>];</div><div class="line"></div><div class="line"><span class="keyword">struct</span> data</div><div class="line">&#123;</div><div class="line">      <span class="keyword">int</span> l,w;</div><div class="line">&#125;wood[<span class="number">11000</span>],change[<span class="number">11000</span>];</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(data a,data b)</span></span></div><div class="line">&#123;</div><div class="line">      <span class="keyword">if</span> (a.l!=b.l) <span class="keyword">return</span> (a.l&lt;b.l);    <span class="comment">//按长度排序</span></div><div class="line">      <span class="keyword">return</span> (a.w&lt;b.w);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">      <span class="keyword">int</span> n,x,y,t,T,ans,num;</div><div class="line"></div><div class="line">      <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;T);</div><div class="line"></div><div class="line">      <span class="keyword">while</span> (T--)</div><div class="line">      &#123;</div><div class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</div><div class="line">            &#123;</div><div class="line">                  Use[i]=<span class="number">1</span>;</div><div class="line">                  <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;wood[i].l,&amp;wood[i].w);</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            sort(wood+<span class="number">1</span>,wood+<span class="number">1</span>+n,cmp);</div><div class="line"></div><div class="line">            x=<span class="number">0</span>;y=<span class="number">0</span>;</div><div class="line">            Use[<span class="number">1</span>]=<span class="number">0</span>;</div><div class="line">            num=<span class="number">1</span>;ans=<span class="number">1</span>;</div><div class="line">            change[<span class="number">1</span>].l=wood[<span class="number">1</span>].l;</div><div class="line">            change[<span class="number">1</span>].w=wood[<span class="number">1</span>].w;</div><div class="line"></div><div class="line">            <span class="keyword">while</span> (num&lt;n)</div><div class="line">            &#123;</div><div class="line">                  t=<span class="number">1</span>;</div><div class="line">                  x=change[<span class="number">1</span>].l;</div><div class="line">                  y=change[<span class="number">1</span>].w;</div><div class="line"></div><div class="line">                  <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</div><div class="line">                        <span class="keyword">if</span> (Use[i]==<span class="number">1</span>)</div><div class="line">                        &#123;</div><div class="line">                              <span class="keyword">if</span> ( x&lt;=wood[i].l &amp;&amp; y&lt;=wood[i].w )</div><div class="line">                              &#123;</div><div class="line">                                    num++;</div><div class="line">                                    x=wood[i].l;</div><div class="line">                                    y=wood[i].w;</div><div class="line">                                    Use[i]=<span class="number">0</span>;</div><div class="line">                              &#125;</div><div class="line">                              <span class="keyword">else</span> <span class="keyword">if</span> (t==<span class="number">1</span>)</div><div class="line">                              &#123;</div><div class="line">                                    num++;</div><div class="line">                                    ans++;</div><div class="line">                                    Use[i]=<span class="number">0</span>;</div><div class="line">                                    change[t].l=wood[i].l;</div><div class="line">                                    change[t].w=wood[i].w;</div><div class="line">                                    t++;</div><div class="line">                              &#125;</div><div class="line">                        &#125;</div><div class="line">            &#125;</div><div class="line">            <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</div><div class="line">      &#125;</div><div class="line"></div><div class="line">      <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> ACM题解 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[HDOJ 1098 【数学题】Ignatius's puzzle]]></title>
      <url>https://b0lv42.github.io/2017/03/02/HDOJ%201098%20%E3%80%90%E6%95%B0%E5%AD%A6%E9%A2%98%E3%80%91Ignatius's%20puzzle/</url>
      <content type="html"><![CDATA[<h3 id="【题目描述】"><a href="#【题目描述】" class="headerlink" title="【题目描述】"></a>【题目描述】</h3><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=1098" target="_blank" rel="external">http://acm.hdu.edu.cn/showproblem.php?pid=1098</a><br><br></p>
<h3 id="【思路】"><a href="#【思路】" class="headerlink" title="【思路】"></a>【思路】</h3><p>要求是给定k，求一个最小的a，对任意的x都能使f(x)整除65，所以f(1)=5+13+a<em>k=18+a</em>k，只要枚举a就可以啦，范围是0到64，因为对数m取模的话，结果是0到m-1循环的啦。查了下解题证明，即证明f(x+1)也成立。</p>
<blockquote>
<p> 求解思路：</p>
<p>f(x)=5<em>x^13+13</em>x^5+k<em>a</em>x;</p>
<p>其中题中”f(x)|65”表示对于任意的整数x,f(x)都能被65整除.所以不难推断:f(x+1)|65也成立.</p>
<p>f(x+1)=5<em>(x+1)^13+13</em>(x+1)^5+k<em>a</em>(x+1),</p>
<p>根据二项式定理:(a+b)^n=C(n,0)a^n+C(n,1)a^(n-1)<em>b+C(n,2)a^(n-2)</em>b^2+…+C(n,n)b^n</p>
<p>得：f(x+1)=5<em>(C(13,0)+C(13,1)</em>x+C(13,2)<em>x^2+…+C(13,13)</em>x^13) +<br>13<em>(C(5,0)+C(5,1)</em>x+…+C(5,5)<em>x^5) + k</em>a*(x+1);</p>
<p>从中提取出f(x)后得：</p>
<p>f(x+1)=f(x)+5<em>(C(13,0) + C(13,1)</em>x+C(13,2)<em>x^2+…+C(13,12)</em>x^12) +<br>13<em>(C(5,0)+C(5,1)</em>x+…+C(5,4)<em>x^4) + k</em>a;</p>
<p>不难看出出了5<em>C(13,0) 、13</em>C(5,0)和k<em>a三项以外，其他项无论x取任意整数都能被65整除,所以如果5</em>C(13,0)<br>+13<em>C(5,0)+k</em>a(相当于18+k*a)能被65整除的话，就可以得出f(x+1)|65了。</p>
<p>再验证一下f(1)=5+13+k<em>a=18+k</em>a同样适用。</p>
<p>所以最终的问题就是给定一个非负整数k,使得(18+k*a)|65,输出满足此条件的最小的非负整数a。</p>
</blockquote>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">      <span class="keyword">int</span> k,flag;</div><div class="line"></div><div class="line">      <span class="keyword">while</span> (~<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;k))</div><div class="line">      &#123;</div><div class="line">            flag=<span class="number">1</span>;</div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">64</span>;i++)</div><div class="line">            &#123;</div><div class="line">                  <span class="keyword">if</span> ((<span class="number">18</span>+k*i)%<span class="number">65</span>==<span class="number">0</span>)</div><div class="line">                  &#123;</div><div class="line">                        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,i);</div><div class="line">                        flag=<span class="number">0</span>;</div><div class="line">                        <span class="keyword">break</span>;</div><div class="line">                  &#125;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">if</span> (flag) <span class="built_in">printf</span>(<span class="string">"no\n"</span>);</div><div class="line">      &#125;</div><div class="line"></div><div class="line">      <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> ACM题解 </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
